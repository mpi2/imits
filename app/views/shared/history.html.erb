<% @title = "#{@resource.class.readable_name.capitalize} #{@resource.id} History" %>
<% audit_revision_formatter = AuditRevisionFormatter.new %>

<div class="grid_12">
  <h2><%= @title %></h2>
  <%- if request.path =~ /admin/ %>
    <%= link_to 'Back', [:admin, @resource] %>
  <%- else %>
    <%= link_to 'Back', @resource %>
  <%- end %>

  <div class="report">
    <table>
      <thead>
        <tr>
          <th>Version</th>
          <th>Date</th>
          <th>User</th>
          <th colspan="2">Changes</th>
        </tr>
      </thead>
      <tbody>
        <% @resource.audits.each do |revision| %>
          <tr>
            <td><%= revision.version %></td>
            <td><%= revision.created_at.to_s(:long) %></td>
            <td>
              <% if revision.user %>
                <%= revision.user.try(:email) %>
              <% else %>
                <% if revision.audited_changes.keys.include?('updated_by_id') %>
                  <%
                  user = case revision.audited_changes['updated_by_id']
                  when Fixnum then User.find_by_id(revision.audited_changes['updated_by_id'])
                  when Array then User.find_by_id(revision.audited_changes['updated_by_id'].last)
                  end
                %>
                  <% if user %>
                    <%= user.try(:email) %>
                  <% end %>
                <% end %>
              <% end %>
            </td>
            <% formatted_audited_changes = audit_revision_formatter.get_formatted_changes(revision.audited_changes, :model => @resource.class) %>
            <td><%= formatted_audited_changes.keys.join('<br />').html_safe %></td>
            <td>
              <% values = formatted_audited_changes.values.map do |val_ary|
                val_ary.map! {|i| if i then "#{i}" else 'nil' end }
                "#{val_ary[0]} => #{val_ary[1]}"
              end %>
              <%= values.join('<br />').html_safe %>
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
</div>
