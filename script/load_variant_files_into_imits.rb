#!/usr/bin/env ruby

missing = []
invalid = []
f = open('del_bam_files.txt', 'r')
f.readlines.each do |line|
  md = /(\w*?)_(.*)\.(\w*)/.match(line.strip)
  raise "#{line}" if md.blank? || md[1].blank? || md[2].blank? || md[3].blank?

  gene = md[1]
  colony = md[2]

  c = Colony.joins(mi_attempt: [mi_plan: :gene]).where("replace(genes.marker_symbol, ' ', '') = '#{gene}' AND replace(replace(colonies.name, ' ', ''),'&', '_') = '#{colony}'")
  c = Colony.joins(mi_attempt: [mi_plan: :gene]).where("replace(colonies.name, ' ', '') = '#{colony}'") if c.blank?  
  if c.blank?
    missing << "#{gene}, #{colony}"
    next
  end

  a = Allele.find(c.first.alleles.first.id)
  a.bam_file = open( "/Users/albagomez/Documents/iMits/crisprcon_outputfiles/pipelineOutput/del/temp/#{line.strip}" ,'rb').read
  if ! a.save
    invalid << a
  end
end


missing2 = []
invalid2 = []
f = open('hdr_bam_files.txt', 'r')
f.readlines.each do |line|
  md = /(\w*?)_(.*)\.(\w*)/.match(line.strip)
  raise "#{line}" if md.blank? || md[1].blank? || md[2].blank? || md[3].blank?

  gene = md[1]
  colony = md[2]

  c = Colony.joins(mi_attempt: [mi_plan: :gene]).where("replace(genes.marker_symbol, ' ', '') = '#{gene}' AND replace(replace(colonies.name, ' ', ''),'&', '_') = '#{colony}'")
  c = Colony.joins(mi_attempt: [mi_plan: :gene]).where("replace(colonies.name, ' ', '') = '#{colony}'") if c.blank?  
  if c.blank?
    missing2 << "#{gene}, #{colony}"
    next
  end

  a = Allele.find(c.first.alleles.first.id)
  a.bam_file = open( "/Users/albagomez/Documents/iMits/crisprcon_outputfiles/pipelineOutput/hdr/temp/#{line.strip}" ,'rb').read
  if ! a.save
    invalid2 << a
  end
end


missing3 = []
invalid3 = []
f = open('del_vcf_files.txt', 'r')
f.readlines.each do |line|
  next if line =~ /\.tbi/
  md = /(.*?)_(.*)\.vcf\.gz/.match(line.strip)
  raise "#{line}" if md.blank? || md[1].blank? || md[2].blank? 

  gene = md[1]
  colony = md[2]

  c = Colony.joins(mi_attempt: [mi_plan: :gene]).where("replace(genes.marker_symbol, ' ', '') = '#{gene}' AND replace(replace(colonies.name, ' ', ''),'&', '_') = '#{colony}'")
  c = Colony.joins(mi_attempt: [mi_plan: :gene]).where("replace(colonies.name, ' ', '') = '#{colony}'") if c.blank?  

  if gene == "Trf"
    puts 
    puts "#{c}"
    puts
  end

  if c.blank?
    missing3 << "#{gene}, #{colony}"
    next
  end

  a = Allele.find(c.first.alleles.first.id)
  # a.vcf_file = open( "/Users/albagomez/Documents/iMits/crisprcon_outputfiles/pipelineOutput/del/#{md[1]}_#{md[2]}.vcf.gz" ,'rb').read
  # a.vcf_file_index = open( "/Users/albagomez/Documents/iMits/crisprcon_outputfiles/pipelineOutput/del/#{md[1]}_#{md[2]}.vcf.gz" ,'rb').read
  a.vcf_file = open( "/Users/albagomez/Documents/iMits/crisprcon_outputfiles/pipelineOutput/del/#{md[1]}_#{md[2]}.vcf.gz" ,'rb').read
  a.vcf_file_index = open( "/Users/albagomez/Documents/iMits/crisprcon_outputfiles/pipelineOutput/del/#{md[1]}_#{md[2]}.vcf.gz" ,'rb').read
  if ! a.save
    invalid3 << a
  end
end


missing4 = []
invalid4 = []
f = open('hdr_vcf_files.txt', 'r')
f.readlines.each do |line|
  next if line =~ /\.tbi/
  md = /(.*?)_(.*)\.vcf\.gz/.match(line.strip)
  raise "#{line}" if md.blank? || md[1].blank? || md[2].blank? 

  gene = md[1]
  colony = md[2]

  c = Colony.joins(mi_attempt: [mi_plan: :gene]).where("replace(genes.marker_symbol, ' ', '') = '#{gene}' AND replace(replace(colonies.name, ' ', ''),'&', '_') = '#{colony}'")
  c = Colony.joins(mi_attempt: [mi_plan: :gene]).where("replace(colonies.name, ' ', '') = '#{colony}'") if c.blank?  
  if c.blank?
    missing4 << "#{gene}, #{colony}"
    next
  end

  a = Allele.find(c.first.alleles.first.id)
  a.vcf_file = open( "/Users/albagomez/Documents/iMits/crisprcon_outputfiles/pipelineOutput/hdr/#{md[1]}_#{md[2]}.vcf.gz" ,'rb').read
  a.vcf_file_index = open( "/Users/albagomez/Documents/iMits/crisprcon_outputfiles/pipelineOutput/hdr/#{md[1]}_#{md[2]}.vcf.gz" ,'rb').read
  if ! a.save
    invalid4 << a
  end
end


# Allele.where("vcf_file IS NOT NULL").each do |a|
#   next if a.annotations.blank?
#   puts "\n", a.id, "\n"
#   puts "\n" + a.id.to_s + "\n"
#   a.auto_allele_description = Allele.generate_allele_description( {'allele_id' => a.id} )
#   raise "Error saving allele #{a.id}" unless a.save!
# end

alleles.each do |a_id|
  a = Allele.find(a_id)
  next if a.annotations.blank?
  puts "\n", a.id, "\n"
  puts "\n" + a.id.to_s + "\n"
  a.auto_allele_description = Allele.generate_allele_description( {'allele_id' => a.id} )
  raise "Error saving allele #{a.id}" unless a.save!
end


alleles =  [259626, 265296, 258495, 264771, 265196, 265303, 258673, 264993, 265297, 259007, 258828, 265287, 264005, 265113, 264925, 258965, 259487, 258493, 258858, 265300, 264539, 265117, 263895, 265301, 265182, 259003, 259759, 265193, 265125, 264801, 258689, 259641, 264776, 264000, 263869, 264543, 263883, 265192, 263991, 263885, 263993, 259541, 264812, 265184, 264992, 263992, 264772, 258793, 258656, 265189, 263900, 258820, 263874, 265298, 264796, 259480, 265223, 259413, 263995, 265218, 265305, 259638, 263888, 264995, 258615, 263871, 265292, 264783, 259640, 259414, 265183, 258651, 259069, 264546, 264007, 263873, 263983, 264998, 265181, 259686, 264768, 258657, 264663, 263870, 264049, 258670, 265116, 265114, 263981, 265185, 265320, 265124, 263994, 263999, 258815, 263894, 263893, 258599, 264538, 265180, 263878, 265121, 263943, 258725, 258964, 264798, 264781, 263977, 264778, 259128, 258400, 264892, 264782, 258895, 259430, 258326, 258986, 263846, 258654, 264729, 264636, 264849, 258885, 264028, 264607, 264567, 264996, 258359, 264103, 259317, 259693, 258931, 263959, 259015, 259257, 258816, 258620, 259331, 259733, 258361, 263958, 259221, 258797, 258591, 258759, 259431, 258982, 264053, 258619, 258724, 259510, 263984, 258581, 259383, 264129, 259074, 258434, 258831, 264861, 264967, 258618, 263842, 258378, 258863, 263845, 264069, 258799, 259754, 264658, 259537, 258739, 258781, 264730, 264850, 264822, 264677, 258786, 264921, 259812, 258691, 264915, 258934, 258645, 263844, 259489, 258928, 259429, 264048, 259644, 264966, 264664, 258355, 258761, 263852, 258325, 264676, 264723, 258834, 264097, 263849, 258878, 258702, 259419, 259143, 264751, 265025, 258995, 264704, 264076, 258911, 259397, 258364, 263853, 258790, 259116, 263953, 265118, 264731, 263850, 263965, 264856, 259809, 258419, 258412, 258893, 258854, 259302, 264138, 258349, 258360, 258368, 258603, 258602, 258666, 258714, 258736, 258838, 258919, 258921, 258981, 259037, 259079, 259098, 259101, 259183, 259178, 259210, 259201, 258846, 259777, 263866, 263902, 263843, 263904, 263962, 263837, 259491, 258616, 258650, 263881, 258648, 258983, 258598, 258642, 263898, 264072, 264082, 263963, 264038, 259024, 264504, 264545, 264540, 258944, 264587, 264003, 259755, 264606, 258485, 258817, 265311, 264832, 264001, 264889, 259139, 258960, 258354, 264670, 258377, 258762, 264674, 259432, 264709, 264708, 264132, 258966, 258357, 265122, 264745, 259479, 259747, 259159, 259520, 259200, 264811, 264794, 264770, 264813, 259155, 264814, 264815, 265187, 265195, 264808, 264866, 264009, 258425, 258523, 264804, 264913, 259751, 258933, 259442, 259020, 258729, 265123, 258962, 259384, 264990, 264989, 265061, 265067, 265294, 265286, 258841, 258686, 259642, 259625, 264105, 258910, 264008, 258492, 258968, 263868, 263875, 263876, 264790, 259070, 263989, 264792, 264773, 263865, 264810, 258984, 264805, 264994, 264802, 259488, 263889, 264806, 264799, 259142, 264893, 264102, 258533, 258327, 264969, 264177, 264753, 263891, 258835, 259522, 264867, 259512, 263985, 263980, 263897, 258697, 258795, 259000, 258628, 258514, 264512, 263915, 258449, 258521, 265016, 258622, 264130, 265079, 259083, 258560, 264816, 258333, 258726, 265054, 264765, 259347, 264602, 259611, 258974, 259811, 259409, 259719, 264888, 259313, 258738, 263960, 258480, 258552, 259664, 259256, 258696, 258874, 258735, 263968, 264604, 259291, 258529, 258897, 258752, 258455, 258629, 259330, 263986, 258924, 259269, 264864, 258596, 259780, 263860, 259544, 258873, 258792, 264939, 263872, 264786, 264905, 259072, 259298, 259199, 258555, 259679, 264175, 263867, 258681, 264642, 259323, 263998, 258535, 263908, 265006, 258519, 258948, 259568, 258993, 258617, 263909, 258609, 258350, 258394, 263848, 258850, 258868, 264700, 258698, 259563, 259034, 258539, 265007, 258655, 259164, 264940, 264767, 264890, 258734, 258393, 259066, 259758, 264605, 259279, 264159, 264544, 265092, 258388, 264568, 259093, 258882, 258852, 259125, 258545, 258334, 258631, 259153, 264611, 264537, 265194, 258727, 264608, 258970, 263859, 264807, 259417, 259621, 259585, 265015, 259148, 264513, 264101, 258562, 258672, 264775, 258836, 259561, 259712, 264045, 258782, 259270, 259127, 265295, 264875, 264923, 258537, 258501, 265057, 259726, 258825, 259280, 258610, 259059, 264541, 265014, 265003, 258365, 259548, 264563, 265017, 258722, 264181, 264194, 259624, 258553, 259745, 259338, 259619, 258335, 259356, 258912, 258789, 258573, 263961, 259141, 258389, 258570, 264598, 264042, 258957, 264036, 264891, 259771, 258534, 258383, 259424, 265010, 258865, 265299, 258827, 263887, 263884, 259282, 264991, 264784, 259138, 263997, 263978, 263952, 259785, 265288, 264542, 264536, 265126, 258932, 258525, 259151, 264800, 259326, 264006, 264894, 259008, 258649, 259757, 264788, 264920, 264047, 263877, 259005, 263890, 258600, 258658, 265190, 258487, 258950, 263886, 263927, 258687, 264809, 265127, 263990, 259519, 264046, 264106, 263982, 258653, 258688, 258987, 265119, 258652, 259639, 264797, 259513, 263880, 264010, 265112, 259535, 259006, 258613, 264795, 263892, 258494, 264997, 258668, 259002, 259039, 259004, 264769, 265115, 258484, 263899, 264107, 259643, 265095, 264104, 264002, 265197, 258758, 264922, 265188, 259168, 258575, 258486, 263882, 258826, 263896, 265186, 265224, 265310, 264774, 264924, 263996, 265307, 258916, 264004, 265289, 259539, 265309, 264787, 264785, 258614, 265120, 265302, 263879, 259306, 259810, 259380, 258819, 259389, 258671, 259283] 

# 258967, 258985, 259391, 259174, 259001, 

colonies = [18653, 20483, 18982, 19964, 20384, 20490, 18768, 20181, 20484, 17919, 18350, 20474, 19370, 20301, 20114, 17931, 18175, 18985, 18081, 20487, 19741, 20305, 19262, 20488, 20370, 17929, 18114, 20381, 20313, 19994, 18764, 18656, 19969, 19365, 19236, 19745, 19250, 20380, 19356, 19252, 19358, 18174, 20005, 20372, 20180, 19357, 19965, 18438, 18775, 20377, 19267, 18391, 19241, 20485, 19989, 18173, 20411, 18207, 19360, 20406, 20492, 18660, 19255, 20183, 18841, 19238, 20479, 19976, 18657, 18206, 20371, 18781, 18586, 19748, 19372, 19240, 19348, 20186, 20369, 18652, 19961, 18773, 19857, 19237, 19414, 18772, 20304, 20302, 19346, 20373, 20507, 20312, 19359, 19364, 18355, 19261, 19260, 18847, 19740, 20368, 19245, 20309, 19308, 18590, 17937, 19991, 19974, 19342, 19971, 17791, 19159, 20081, 19975, 18286, 16436, 19173, 17921, 19213, 18777, 19923, 19830, 20038, 18066, 19393, 19801, 19761, 20184, 18403, 19468, 17514, 17944, 17777, 19324, 17778, 17595, 18351, 18829, 18243, 16262, 18456, 19323, 17667, 18405, 18909, 18475, 16404, 17976, 19418, 18830, 18602, 18401, 19349, 18913, 16910, 19493, 18603, 19054, 18111, 20050, 20155, 18835, 19209, 18345, 18334, 19212, 19434, 18383, 18333, 19852, 18035, 18581, 18471, 19924, 20039, 20015, 19871, 18402, 20110, 18092, 18723, 20104, 17971, 18798, 19211, 18090, 17982, 18194, 19413, 18650, 20154, 19858, 19169, 18453, 19219, 19174, 19870, 19917, 18091, 19462, 19216, 18067, 18728, 17078, 18439, 19944, 20213, 18470, 19898, 19441, 18040, 17076, 19086, 19220, 18454, 17781, 19318, 20306, 19925, 19217, 19330, 20045, 18096, 19087, 19105, 18165, 18313, 17515, 19502, 19168, 18457, 19084, 18840, 18842, 18789, 18702, 18582, 18107, 17995, 18039, 17975, 17811, 18574, 12231, 12192, 17867, 18667, 12196, 12213, 18279, 18312, 19233, 19269, 19210, 19271, 19327, 19204, 18055, 18838, 18783, 19248, 18786, 17933, 18851, 18895, 19265, 19437, 19447, 19328, 19403, 17897, 19706, 19747, 19742, 17977, 19781, 19368, 18112, 19800, 18986, 18406, 20498, 20025, 19366, 20078, 18431, 18710, 19170, 19864, 18344, 18501, 19868, 18336, 19903, 19902, 19496, 17930, 18831, 20310, 19938, 17019, 16261, 12378, 16915, 12214, 20004, 19987, 19963, 20006, 18335, 20007, 20008, 20375, 20383, 20001, 20055, 19374, 19160, 18943, 19997, 20102, 16288, 17974, 16515, 18468, 18593, 20311, 17788, 16813, 20178, 20177, 20249, 20255, 20481, 20473, 18845, 18784, 18654, 18655, 19470, 18038, 19373, 18988, 17923, 19235, 19242, 19243, 19983, 18584, 19354, 19985, 19966, 19232, 20003, 17928, 19998, 20182, 19995, 18170, 19256, 19999, 19992, 18441, 20082, 19467, 18934, 19171, 20157, 19541, 19946, 19258, 18116, 16912, 20056, 18440, 19350, 19345, 19264, 18738, 18427, 17936, 18825, 18954, 19714, 19282, 19133, 18947, 20204, 16572, 19494, 20267, 17825, 12372, 20009, 19199, 18589, 20242, 19958, 18230, 19796, 16445, 18712, 18117, 17147, 18122, 20077, 17537, 18891, 19325, 19002, 18636, 16577, 17596, 18739, 18167, 18585, 19333, 19798, 17538, 18898, 18044, 18509, 19062, 18824, 17350, 19351, 17988, 17599, 20053, 18854, 16189, 19227, 16850, 18284, 18445, 20127, 19239, 19979, 20094, 12790, 17530, 18435, 16743, 18136, 19539, 19234, 18801, 19836, 18268, 19363, 18930, 19275, 20194, 18949, 17946, 16802, 12951, 18850, 19276, 18849, 19194, 19117, 19215, 18328, 18319, 19894, 18737, 16792, 17893, 18745, 20195, 18776, 17729, 20128, 19960, 20079, 18588, 19118, 12948, 18115, 19799, 17545, 19523, 19746, 20280, 19135, 19762, 17824, 18061, 18316, 17808, 17914, 19198, 18822, 17782, 19805, 19739, 20382, 18587, 19802, 18704, 19226, 20000, 18195, 18160, 16718, 20203, 17760, 19715, 19466, 12178, 18770, 19968, 18113, 16796, 16441, 19410, 18469, 17597, 17793, 20482, 20064, 20112, 18884, 18974, 20245, 16368, 18354, 17546, 18857, 12882, 19743, 20202, 20191, 19085, 16844, 19757, 20205, 18637, 19545, 19555, 18658, 17494, 16303, 17335, 18665, 19195, 17301, 18037, 18491, 12902, 19326, 18446, 19134, 17163, 19792, 19407, 18706, 19401, 20080, 18330, 18896, 19143, 17053, 20198, 18321, 20486, 18352, 19254, 19251, 17544, 20179, 19977, 17792, 19362, 19343, 19317, 18309, 20475, 19744, 19738, 20314, 17979, 18935, 12199, 19993, 18356, 19371, 20083, 17918, 18785, 18118, 19981, 20109, 19412, 19244, 17924, 19257, 18846, 18769, 20378, 18981, 17935, 19253, 19292, 18782, 20002, 20315, 19355, 18392, 19411, 19471, 19347, 18778, 18779, 17920, 20307, 18780, 18659, 19990, 18437, 19247, 19375, 20300, 18172, 17922, 18848, 19988, 19259, 18984, 20185, 18787, 17932, 17868, 17927, 19962, 20303, 18987, 19266, 19472, 18651, 20283, 19469, 19367, 20385, 18476, 20111, 20376, 17736, 18927, 18983, 19249, 18353, 19263, 20374, 20412, 20497, 19967, 20113, 19361, 20494, 18285, 19369, 20476, 18176, 20496, 19980, 19978, 18844, 20308, 20489, 19246, 17553, 18119, 18201, 18393, 18200, 18771, 17542] 




