Ext.define("Imits.data.JsonReader",{extend:"Ext.data.reader.Json",alias:null,readRecords:function(a){if(!this.getRoot(a)&&!Ext.isEmpty(a.id)){a=[a]}return this.callParent([a])},getResponseData:function(a){if(a.request.options.method=="DELETE"&&a.status==200){return{}}else{return this.callParent([a])}}});Ext.define("Imits.data.JsonWriter",{extend:"Ext.data.writer.Json",writeAllFields:false,write:function(a){var b=this.callParent([a]);b.params.authenticity_token=window.authenticityToken;if(b.jsonData[this.root]&&b.jsonData[this.root]["id"]){delete b.jsonData[this.root]["id"]}if(b.action==="destroy"&&!Ext.isEmpty(b.params)){b.url=Ext.urlAppend(b.url,Ext.urlEncode(b.params));b.jsonData=null;b.params=null}return b}});Ext.define("Imits.data.Proxy",{extend:"Ext.data.proxy.Rest",requires:["Imits.data.JsonWriter","Imits.data.JsonReader"],constructor:function(a){var b=a.resource;this.callParent([{format:"json",url:window.basePath+"/"+b+"s",extraParams:{extended_response:true},startParam:undefined,limitParam:"per_page",sortParam:"sorts",reader:Ext.create("Imits.data.JsonReader",{root:b+"s"}),writer:Ext.create("Imits.data.JsonWriter",{root:b,writeAllFields:false}),listeners:{exception:function(e,d,c){var g=Ext.JSON.decode(d.responseText);var f=function(){var h=[];Ext.Object.each(g,function(j,i){var k=Ext.String.capitalize(j).replace(/_/g," ")+": ";if(Ext.isString(i)){k+=i}else{if(Ext.isArray){k+=i.join(", ")}}h.push(k)});return h.join("<br/>")};Ext.MessageBox.show({title:"Error",msg:f(g),icon:Ext.MessageBox.ERROR,buttons:Ext.Msg.OK,fn:function(h,j,i){console.log("TODO: Refresh the cell/row that was changed")}})}},encodeSorters:function(c){if(c.length===0){return""}else{var d=c[0];return d.property+" "+d.direction.toLowerCase()}}}])}});Ext.define("Imits.model.Gene",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",readOnly:true},{name:"marker_symbol",readOnly:true},{name:"mgi_accession_id",readOnly:true},{name:"ikmc_projects_count",readOnly:true},{name:"pretty_print_types_of_cells_available",readOnly:true},{name:"non_assigned_mi_plans",readOnly:true},{name:"assigned_mi_plans",readOnly:true},{name:"pretty_print_aborted_mi_attempts",readOnly:true},{name:"pretty_print_mi_attempts_in_progress",readOnly:true},{name:"pretty_print_mi_attempts_genotype_confirmed",readOnly:true},{name:"pretty_print_phenotype_attempts",readOnly:true}],proxy:Ext.create("Imits.data.Proxy",{resource:"gene"})});Ext.define("Imits.model.MiAttempt",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",persist:false},{name:"es_cell_name",persist:false},{name:"es_cell_marker_symbol",persist:false},{name:"es_cell_allele_symbol",persist:false},{name:"mi_date",type:"date"},{name:"status_name",persist:false},"colony_name",{name:"consortium_name",persist:false},{name:"production_centre_name",persist:false},"distribution_centres_attributes",{name:"pretty_print_distribution_centres",readOnly:true},"blast_strain_name",{name:"total_blasts_injected",type:"int"},{name:"total_transferred",type:"int"},{name:"number_surrogates_receiving",type:"int"},{name:"total_pups_born",type:"int"},{name:"total_female_chimeras",type:"int"},{name:"total_male_chimeras",type:"int"},{name:"total_chimeras",type:"int",persist:false},{name:"number_of_males_with_0_to_39_percent_chimerism",type:"int"},{name:"number_of_males_with_40_to_79_percent_chimerism",type:"int"},{name:"number_of_males_with_80_to_99_percent_chimerism",type:"int"},{name:"number_of_males_with_100_percent_chimerism",type:"int"},{name:"emma_status"},{name:"test_cross_strain_name"},{name:"colony_background_strain_name"},{name:"date_chimeras_mated",type:"date"},{name:"number_of_chimera_matings_attempted",type:"int"},{name:"number_of_chimera_matings_successful",type:"int"},{name:"number_of_chimeras_with_glt_from_cct",type:"int"},{name:"number_of_chimeras_with_glt_from_genotyping",type:"int"},{name:"number_of_chimeras_with_0_to_9_percent_glt",type:"int"},{name:"number_of_chimeras_with_10_to_49_percent_glt",type:"int"},{name:"number_of_chimeras_with_50_to_99_percent_glt",type:"int"},{name:"number_of_chimeras_with_100_percent_glt",type:"int"},{name:"total_f1_mice_from_matings",type:"int"},{name:"number_of_cct_offspring",type:"int"},{name:"number_of_het_offspring",type:"int"},{name:"number_of_live_glt_offspring",type:"int"},{name:"mouse_allele_type",readOnly:true},{name:"mouse_allele_symbol",readOnly:true},"qc_southern_blot_result","qc_five_prime_lr_pcr_result","qc_five_prime_cassette_integrity_result","qc_tv_backbone_assay_result","qc_neo_count_qpcr_result","qc_neo_sr_pcr_result","qc_loa_qpcr_result","qc_homozygous_loa_sr_pcr_result","qc_lacz_sr_pcr_result","qc_mutant_specific_sr_pcr_result","qc_loxp_confirmation_result","qc_three_prime_lr_pcr_result",{name:"report_to_public",type:"boolean"},{name:"is_active",type:"boolean"},{name:"is_released_from_genotyping",type:"boolean"},{name:"phenotype_attempts_count",type:"int",readOnly:true,persist:false}],proxy:Ext.create("Imits.data.Proxy",{resource:"mi_attempt"})});Ext.define("Imits.model.MiPlan",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",persist:false},{name:"marker_symbol"},{name:"consortium_name"},{name:"production_centre_name"},{name:"status_name"},{name:"priority_name"},{name:"sub_project_name"},{name:"number_of_es_cells_starting_qc"},{name:"number_of_es_cells_passing_qc"},{name:"withdrawn",defaultValue:false},{name:"is_active",defaultValue:true},{name:"is_bespoke_allele",defaultValue:false},{name:"es_qc_comment_name"},{name:"is_conditional_allele",defaultValue:false},{name:"is_deletion_allele",defaultValue:false},{name:"is_cre_knock_in_allele",defaultValue:false},{name:"is_cre_bac_allele",defaultValue:false},{name:"is_conditional_allele",defaultValue:false},{name:"comment"},{name:"mi_attempts_count",readOnly:true,persist:false},{name:"phenotype_attempts_count",readOnly:true,persist:false}],proxy:Ext.create("Imits.data.Proxy",{resource:"mi_plan"})});Ext.define("Imits.model.PhenotypeAttempt",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",persist:false},{name:"colony_name"},{name:"consortium_name"},{name:"production_centre_name"},"distribution_centres_attributes",{name:"pretty_print_distribution_centres",readOnly:true},{name:"mi_attempt_colony_name",readOnly:true,persist:false},{name:"marker_symbol"},{name:"is_active"},{name:"status_name",persist:false,readOnly:true},{name:"rederivation_started"},{name:"rederivation_complete"},{name:"deleter_strain_name"},{name:"number_of_cre_matings_successful"},{name:"phenotyping_started"},{name:"phenotyping_complete"}],proxy:Ext.create("Imits.data.Proxy",{resource:"phenotype_attempt"})});Ext.define("Imits.widget.Grid",{extend:"Ext.grid.Panel",manageResize:function(){var b=window.innerHeight-30;if(!b){b=document.documentElement.clientHeight-30}var a=b-this.getEl().getTop();if(a<200){a=200}this.setHeight(a);this.setWidth(this.getEl().up("div").getWidth());this.doLayout()},reloadStore:function(){var a=this.getStore();a.sync();a.load()}});Ext.define("Ext.ux.grid.menu.ListMenu",{extend:"Ext.menu.Menu",labelField:"text",loadingText:"Loading...",loadOnShow:true,single:false,constructor:function(b){this.selected=[];this.addEvents("checkchange");this.callParent([b=b||{}]);if(!b.store&&b.options){var c=[];for(var d=0,a=b.options.length;d<a;d++){var e=b.options[d];switch(Ext.type(e)){case"array":c.push(e);break;case"object":c.push([e.id,e[this.labelField]]);break;case"string":c.push([e,e]);break}}this.store=Ext.create("Ext.data.ArrayStore",{fields:["id",this.labelField],data:c,listeners:{load:this.onLoad,scope:this}});this.loaded=true}else{this.add({text:this.loadingText,iconCls:"loading-indicator"});this.store.on("load",this.onLoad,this)}},destroy:function(){if(this.store){this.store.destroyStore()}this.callParent()},show:function(){var a=null;return function(){if(arguments.length===0){this.callParent(a)}else{a=arguments;if(this.loadOnShow&&!this.loaded){this.store.load()}this.callParent(arguments)}}}(),onLoad:function(h,b){var g=this,a=g.isVisible(),e,j,c,d,f;g.hide(false);g.removeAll(true);e=g.single?Ext.id():null;for(d=0,f=b.length;d<f;d++){c=b[d].get("id");j=Ext.create("Ext.menu.CheckItem",{text:b[d].get(g.labelField),group:e,checked:Ext.Array.contains(g.selected,c),hideOnClick:false,value:c});j.on("checkchange",g.checkChange,g);g.add(j)}g.loaded=true;if(a){g.show()}g.fireEvent("load",g,b)},getSelected:function(){return this.selected},setSelected:function(a){a=this.selected=[].concat(a);if(this.loaded){this.items.each(function(d){d.setChecked(false,true);for(var c=0,b=a.length;c<b;c++){if(d.value==a[c]){d.setChecked(true,true)}}},this)}},checkChange:function(b,a){var c=[];this.items.each(function(d){if(d.checked){c.push(d.value)}},this);this.selected=c;this.fireEvent("checkchange",b,a)}});Ext.define("Ext.ux.grid.menu.RangeMenu",{extend:"Ext.menu.Menu",fieldCls:"Ext.form.field.Number",iconCls:{gt:"ux-rangemenu-gt",lt:"ux-rangemenu-lt",eq:"ux-rangemenu-eq"},fieldLabels:{gt:"Greater Than",lt:"Less Than",eq:"Equal To"},menuItemCfgs:{emptyText:"Enter Number...",selectOnFocus:false,width:155},menuItems:["lt","gt","-","eq"],constructor:function(a){var f=this,c,g,b,e,h,d,j;f.callParent(arguments);c=f.fields=f.fields||{};g=f.fieldCfg=f.fieldCfg||{};f.addEvents("update");f.updateTask=Ext.create("Ext.util.DelayedTask",f.fireUpdate,f);for(b=0,e=f.menuItems.length;b<e;b++){h=f.menuItems[b];if(h!=="-"){d={itemId:"range-"+h,enableKeyEvents:true,hideLabel:false,fieldLabel:f.iconTpl.apply({cls:f.iconCls[h]||"no-icon",text:f.fieldLabels[h]||"",src:Ext.BLANK_IMAGE_URL}),labelSeparator:"",labelWidth:29,listeners:{scope:f,change:f.onInputChange,keyup:f.onInputKeyUp,el:{click:function(i){i.stopPropagation()}}},activate:Ext.emptyFn,deactivate:Ext.emptyFn};Ext.apply(d,Ext.applyIf(c[h]||{},g[h]),f.menuItemCfgs);j=d.fieldCls||f.fieldCls;h=c[h]=Ext.create(j,d)}f.add(h)}},fireUpdate:function(){this.fireEvent("update",this)},getValue:function(){var a={},b,c;for(b in this.fields){c=this.fields[b];if(c.isValid()&&c.getValue()!==null){a[b]=c.getValue()}}return a},setValue:function(b){var a;for(a in this.fields){this.fields[a].setValue(a in b?b[a]:"")}this.fireEvent("update",this)},onInputKeyUp:function(b,a){if(a.getKey()===a.RETURN&&b.isValid()){a.stopEvent();this.hide()}},onInputChange:function(f){var e=this,c=e.fields,b=c.eq,d=c.gt,a=c.lt;if(f==b){if(d){d.setValue(null)}if(a){a.setValue(null)}}else{b.setValue(null)}this.updateTask.delay(this.updateBuffer)}},function(){this.prototype.iconTpl=Ext.create("Ext.XTemplate",'<img src="{src}" alt="{text}" class="'+Ext.baseCSSPrefix+'menu-item-icon ux-rangemenu-icon {cls}" />')});Ext.define("Ext.ux.grid.filter.Filter",{extend:"Ext.util.Observable",active:false,dataIndex:null,menu:null,updateBuffer:500,constructor:function(a){Ext.apply(this,a);this.addEvents("activate","deactivate","serialize","update");Ext.ux.grid.filter.Filter.superclass.constructor.call(this);this.menu=this.createMenu(Ext.applyIf({filtered:true},a));this.init(a);if(a&&a.value){this.setValue(a.value);this.setActive(a.active!==false,true);delete a.value}},destroy:function(){if(this.menu){this.menu.destroy()}this.clearListeners()},init:Ext.emptyFn,createMenu:function(a){return Ext.create("Ext.menu.Menu",a)},getValue:Ext.emptyFn,setValue:Ext.emptyFn,isActivatable:function(){return true},getSerialArgs:Ext.emptyFn,validateRecord:function(){return true},serialize:function(){var a=this.getSerialArgs();this.fireEvent("serialize",a,this);return a},fireUpdate:function(){if(this.active){this.fireEvent("update",this)}this.setActive(this.isActivatable())},setActive:function(b,a){if(this.active!=b){this.active=b;if(a!==true){this.fireEvent(b?"activate":"deactivate",this)}}}});Ext.define("Ext.ux.grid.filter.BooleanFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.boolean",defaultValue:false,yesText:"Yes",noText:"No",init:function(a){var c=Ext.id();this.options=[Ext.create("Ext.menu.CheckItem",{text:this.yesText,group:c,checked:this.defaultValue===true}),Ext.create("Ext.menu.CheckItem",{text:this.noText,group:c,checked:this.defaultValue===false})];this.menu.add(this.options[0],this.options[1]);for(var b=0;b<this.options.length;b++){this.options[b].on("click",this.fireUpdate,this);this.options[b].on("checkchange",this.fireUpdate,this)}},getValue:function(){return this.options[0].checked},setValue:function(a){this.options[a?0:1].setChecked(true)},getSerialArgs:function(){var a={type:"boolean",value:this.getValue()};return a},validateRecord:function(a){return a.get(this.dataIndex)==this.getValue()}});Ext.define("Ext.ux.grid.filter.DateFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.date",uses:["Ext.picker.Date","Ext.menu.Menu"],afterText:"After",beforeText:"Before",compareMap:{before:"lt",after:"gt",on:"eq"},dateFormat:"m/d/Y",menuItems:["before","after","-","on"],menuItemCfgs:{selectOnFocus:true,width:125},onText:"On",pickerOpts:{},init:function(d){var g=this,c,e,a,f,b;c=Ext.apply(g.pickerOpts,{xtype:"datepicker",minDate:g.minDate,maxDate:g.maxDate,format:g.dateFormat,listeners:{scope:g,select:g.onMenuSelect}});g.fields={};for(e=0,a=g.menuItems.length;e<a;e++){f=g.menuItems[e];if(f!=="-"){b={itemId:"range-"+f,text:g[f+"Text"],menu:Ext.create("Ext.menu.Menu",{items:[Ext.apply(c,{itemId:f})]}),listeners:{scope:g,checkchange:g.onCheckChange}};f=g.fields[f]=Ext.create("Ext.menu.CheckItem",b)}g.menu.add(f)}},onCheckChange:function(){this.setActive(this.isActivatable());this.fireEvent("update",this)},onInputKeyUp:function(c,b){var a=b.getKey();if(a==b.RETURN&&c.isValid()){b.stopEvent();this.menu.hide()}},onMenuSelect:function(c,b){var a=this.fields,d=this.fields[c.itemId];d.setChecked(true);if(d==a.on){a.before.setChecked(false,true);a.after.setChecked(false,true)}else{a.on.setChecked(false,true);if(d==a.after&&this.getFieldValue("before")<b){a.before.setChecked(false,true)}else{if(d==a.before&&this.getFieldValue("after")>b){a.after.setChecked(false,true)}}}this.fireEvent("update",this);c.up("menu").hide()},getValue:function(){var b,a={};for(b in this.fields){if(this.fields[b].checked){a[b]=this.getFieldValue(b)}}return a},setValue:function(c,b){var a;for(a in this.fields){if(c[a]){this.getPicker(a).setValue(c[a]);this.fields[a].setChecked(true)}else{if(!b){this.fields[a].setChecked(false)}}}this.fireEvent("update",this)},isActivatable:function(){var a;for(a in this.fields){if(this.fields[a].checked){return true}}return false},getSerialArgs:function(){var a=[];for(var b in this.fields){if(this.fields[b].checked){a.push({type:"date",comparison:this.compareMap[b],value:Ext.Date.format(this.getFieldValue(b),this.dateFormat)})}}return a},getFieldValue:function(a){return this.getPicker(a).getValue()},getPicker:function(a){return this.fields[a].menu.items.first()},validateRecord:function(b){var c,e,d=b.get(this.dataIndex),a=Ext.Date.clearTime;if(!Ext.isDate(d)){return false}d=a(d,true).getTime();for(c in this.fields){if(this.fields[c].checked){e=a(this.getFieldValue(c),true).getTime();if(c=="before"&&e<=d){return false}if(c=="after"&&e>=d){return false}if(c=="on"&&e!=d){return false}}}return true}});Ext.define("Ext.ux.grid.filter.ListFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.list",phpMode:false,init:function(a){this.dt=Ext.create("Ext.util.DelayedTask",this.fireUpdate,this)},createMenu:function(a){var b=Ext.create("Ext.ux.grid.menu.ListMenu",a);b.on("checkchange",this.onCheckChange,this);return b},getValue:function(){return this.menu.getSelected()},setValue:function(a){this.menu.setSelected(a);this.fireEvent("update",this)},isActivatable:function(){return this.getValue().length>0},getSerialArgs:function(){return{type:"list",value:this.phpMode?this.getValue().join(","):this.getValue()}},onCheckChange:function(){this.dt.delay(this.updateBuffer)},validateRecord:function(a){var b=this.getValue();return Ext.Array.indexOf(b,a.get(this.dataIndex))>-1}});Ext.define("Ext.ux.grid.filter.NumericFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.numeric",uses:["Ext.form.field.Number"],createMenu:function(a){var b=this,c;c=Ext.create("Ext.ux.grid.menu.RangeMenu",a);c.on("update",b.fireUpdate,b);return c},getValue:function(){return this.menu.getValue()},setValue:function(a){this.menu.setValue(a)},isActivatable:function(){var a=this.getValue(),b;for(b in a){if(a[b]!==undefined){return true}}return false},getSerialArgs:function(){var c,b=[],a=this.menu.getValue();for(c in a){b.push({type:"numeric",comparison:c,value:a[c]})}return b},validateRecord:function(a){var d=a.get(this.dataIndex),b=this.getValue(),c=Ext.isNumber;if(c(b.eq)&&d!=b.eq){return false}if(c(b.lt)&&d>=b.lt){return false}if(c(b.gt)&&d<=b.gt){return false}return true}});Ext.define("Ext.ux.grid.filter.StringFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.string",iconCls:"ux-gridfilter-text-icon",emptyText:"Enter Filter Text...",selectOnFocus:true,width:125,init:function(a){Ext.applyIf(a,{enableKeyEvents:true,iconCls:this.iconCls,hideLabel:true,listeners:{scope:this,keyup:this.onInputKeyUp,el:{click:function(b){b.stopPropagation()}}}});this.inputItem=Ext.create("Ext.form.field.Text",a);this.menu.add(this.inputItem);this.updateTask=Ext.create("Ext.util.DelayedTask",this.fireUpdate,this)},getValue:function(){return this.inputItem.getValue()},setValue:function(a){this.inputItem.setValue(a);this.fireEvent("update",this)},isActivatable:function(){return this.inputItem.getValue().length>0},getSerialArgs:function(){return{type:"string",value:this.getValue()}},validateRecord:function(a){var b=a.get(this.dataIndex);if(typeof b!="string"){return(this.getValue().length===0)}return b.toLowerCase().indexOf(this.getValue().toLowerCase())>-1},onInputKeyUp:function(c,b){var a=b.getKey();if(a==b.RETURN&&c.isValid()){b.stopEvent();this.menu.hide();return}this.updateTask.delay(this.updateBuffer)}});Ext.define("Ext.ux.grid.FiltersFeature",{extend:"Ext.grid.feature.Feature",alias:"feature.filters",uses:["Ext.ux.grid.menu.ListMenu","Ext.ux.grid.menu.RangeMenu","Ext.ux.grid.filter.BooleanFilter","Ext.ux.grid.filter.DateFilter","Ext.ux.grid.filter.ListFilter","Ext.ux.grid.filter.NumericFilter","Ext.ux.grid.filter.StringFilter"],autoReload:true,filterCls:"ux-filtered-column",local:false,menuFilterText:"Filters",paramPrefix:"filter",showMenu:true,stateId:undefined,updateBuffer:500,hasFeatureEvent:false,constructor:function(a){var b=this;a=a||{};Ext.apply(b,a);b.deferredUpdate=Ext.create("Ext.util.DelayedTask",b.reload,b);b.filters=b.createFiltersCollection();b.filterConfigs=a.filters},attachEvents:function(){var c=this,a=c.view,d=a.headerCt,b=c.getGridPanel();c.bindStore(a.getStore(),true);d.on("menucreate",c.onMenuCreate,c);a.on("refresh",c.onRefresh,c);b.on({scope:c,beforestaterestore:c.applyState,beforestatesave:c.saveState,beforedestroy:c.destroy});b.filters=c;b.addEvents("filterupdate")},createFiltersCollection:function(){return Ext.create("Ext.util.MixedCollection",false,function(a){return a?a.dataIndex:null})},createFilters:function(){var h=this,g=h.filters.getCount(),a=h.getGridPanel(),d=h.createFiltersCollection(),e=a.store.model,f=e.prototype.fields,i,c,b;if(g){b={};h.saveState(null,b)}function j(l,k,m){if(l&&(m||k)){i=f.get(l);c={dataIndex:l,type:(i&&i.type&&i.type.type)||"auto"};if(Ext.isObject(k)){Ext.apply(c,k)}d.replace(c)}}Ext.Array.each(h.filterConfigs,function(k){j(k.dataIndex,k)});Ext.Array.each(a.columns,function(k){if(k.filterable===false){d.removeAtKey(k.dataIndex)}else{j(k.dataIndex,k.filter,k.filterable)}});h.removeAll();h.addFilters(d.items);if(g){h.applyState(null,b)}},onMenuCreate:function(c,b){var a=this;a.createFilters();b.on("beforeshow",a.onMenuBeforeShow,a)},onMenuBeforeShow:function(d){var c=this,b,a;if(c.showMenu){b=c.menuItem;if(!b||b.isDestroyed){c.createMenuItem(d);b=c.menuItem}a=c.getMenuFilter();if(a){b.menu=a.menu;b.setChecked(a.active);b.setDisabled(a.disabled===true)}b.setVisible(!!a);this.sep.setVisible(!!a)}},createMenuItem:function(b){var a=this;a.sep=b.add("-");a.menuItem=b.add({checked:false,itemId:"filters",text:a.menuFilterText,listeners:{scope:a,checkchange:a.onCheckChange,beforecheckchange:a.onBeforeCheck}})},getGridPanel:function(){return this.view.up("gridpanel")},applyState:function(b,d){var a,c;this.applyingState=true;this.clearFilters();if(d.filters){for(a in d.filters){c=this.filters.get(a);if(c){c.setValue(d.filters[a]);c.setActive(true)}}}this.deferredUpdate.cancel();if(this.local){this.reload()}delete this.applyingState;delete d.filters},saveState:function(a,c){var b={};this.filters.each(function(d){if(d.active){b[d.dataIndex]=d.getValue()}});return(c.filters=b)},destroy:function(){var a=this;Ext.destroyMembers(a,"menuItem","sep");a.removeAll();a.clearListeners()},removeAll:function(){if(this.filters){Ext.destroy.apply(Ext,this.filters.items);this.filters.clear()}},bindStore:function(a,b){if(!b&&this.store){if(this.local){a.un("load",this.onLoad,this)}else{a.un("beforeload",this.onBeforeLoad,this)}}if(a){if(this.local){a.on("load",this.onLoad,this)}else{a.on("beforeload",this.onBeforeLoad,this)}}this.store=a},getMenuFilter:function(){var a=this.view.headerCt.getMenu().activeHeader;return a?this.filters.get(a.dataIndex):null},onCheckChange:function(a,b){this.getMenuFilter().setActive(b)},onBeforeCheck:function(a,b){return !b||this.getMenuFilter().isActivatable()},onStateChange:function(d,b){if(d!=="serialize"){var c=this,a=c.getGridPanel();if(b==c.getMenuFilter()){c.menuItem.setChecked(b.active,false)}if((c.autoReload||c.local)&&!c.applyingState){c.deferredUpdate.delay(c.updateBuffer)}c.updateColumnHeadings();if(!c.applyingState){a.saveState()}a.fireEvent("filterupdate",c,b)}},onBeforeLoad:function(a,b){b.params=b.params||{};this.cleanParams(b.params);var c=this.buildQuery(this.getFilterData());Ext.apply(b.params,c)},onLoad:function(a,b){a.filterBy(this.getRecordFilter())},onRefresh:function(){this.updateColumnHeadings()},updateColumnHeadings:function(){var a=this,b=a.view.headerCt;if(b){b.items.each(function(d){var c=a.getFilter(d.dataIndex);d[c&&c.active?"addCls":"removeCls"](a.filterCls)})}},reload:function(){var b=this,a=b.view.getStore(),c;if(b.local){a.clearFilter(true);a.filterBy(b.getRecordFilter())}else{b.deferredUpdate.cancel();a.loadPage(1)}},getRecordFilter:function(){var c=[],a,b;this.filters.each(function(d){if(d.active){c.push(d)}});a=c.length;return function(d){for(b=0;b<a;b++){if(!c[b].validateRecord(d)){return false}}return true}},addFilter:function(a){var c=this.getFilterClass(a.type),b=a.menu?a:(new c(a));this.filters.add(b);Ext.util.Observable.capture(b,this.onStateChange,this);return b},addFilters:function(d){if(d){var b,a,c;for(b=0,a=d.length;b<a;b++){c=d[b];if(c){this.addFilter(c)}}}},getFilter:function(a){return this.filters.get(a)},clearFilters:function(){this.filters.each(function(a){a.setActive(false)})},getFilterData:function(){var c=[],b,a;this.filters.each(function(e){if(e.active){var g=[].concat(e.serialize());for(b=0,a=g.length;b<a;b++){c.push({field:e.dataIndex,data:g[b]})}}});return c},buildQuery:function(b){var a={},c,h,j,e,k,d,g=b.length;if(!this.encode){for(c=0;c<g;c++){h=b[c];j=[this.paramPrefix,"[",c,"]"].join("");a[j+"[field]"]=h.field;e=j+"[data]";for(k in h.data){a[[e,"[",k,"]"].join("")]=h.data[k]}}}else{d=[];for(c=0;c<g;c++){h=b[c];d.push(Ext.apply({},{field:h.field},h.data))}if(d.length>0){a[this.paramPrefix]=Ext.JSON.encode(d)}}return a},cleanParams:function(c){if(this.encode){delete c[this.paramPrefix]}else{var b,a;b=new RegExp("^"+this.paramPrefix+"[[0-9]+]");for(a in c){if(b.test(a)){delete c[a]}}}},getFilterClass:function(a){switch(a){case"auto":a="string";break;case"int":case"float":a="numeric";break;case"bool":a="boolean";break}return Ext.ClassManager.getByAlias("gridfilter."+a)}});Ext.define("Imits.widget.grid.RansackFiltersFeature",{extend:"Ext.ux.grid.FiltersFeature",alias:"feature.ransack_filters",encode:false,buildQuerySingle:function(b){var c={};switch(b.data.type){case"string":case"list":c["q["+b.field+"_ci_in][]"]=b.data.value;break;case"boolean":c["q["+b.field+"_eq]"]=b.data.value;break;case"date":var a=b.data.value.split("/");c["q["+b.field+"_"+b.data.comparison+"]"]=[a[2]+"-"+a[0]+"-"+a[1]];break}return c},buildQuery:function(b){var c={};var a=this;Ext.each(b,function(e){var f=a.buildQuerySingle(e);for(var d in f){c[d]=f[d]}});return c},cleanParams:function(c){var b,a;b=new RegExp("^q\\[\\w+_ci_in\\]$");for(a in c){if(b.test(a)){delete c[a]}}}});Ext.define("Imits.widget.SimpleCombo",{extend:"Ext.form.field.ComboBox",alias:"widget.simplecombo",typeAhead:false,triggerAction:"all",forceSelection:true,editable:false,constructor:function(a){if(a.storeOptionsAreSpecial==true){var b=function(c){if(Ext.isEmpty(c)){return[c,window.NO_BREAK_SPACE]}else{return[c,Ext.String.htmlEncode(c)]}};a.store=Ext.Array.map(a.store,b)}this.callParent([a])},initComponent:function(){this.callParent();if(this.storeOptionsAreSpecial==true){this.displayTpl=Ext.create("Ext.XTemplate",'<tpl for=".">{[typeof values === "string" ? values : values["'+this.valueField+'"]]}<tpl if="xindex < xcount">'+this.delimiter+"</tpl></tpl>")}}});Ext.define("Imits.widget.Window",{extend:"Ext.window.Window",plain:true,showLoadMask:function(){this.loadMask=new Ext.LoadMask(this.getComponent(0).getEl());this.loadMask.show()},hideLoadMask:function(){this.loadMask.hide()}});Ext.define("Imits.widget.SimpleCheckbox",{extend:"Ext.form.field.Checkbox",alias:"widget.simplecheckbox",editor:{xtype:"checkbox",cls:"x-grid-checkheader-editor"},renderer:function(b){var a="x-grid-checkheader";if(b===true){a+=" x-grid-checkheader-checked"}return'<div class="'+a+'"></div>'},filter:{type:"boolean",defaultValue:null}});Ext.define("Imits.widget.MiPlanEditor",{extend:"Imits.widget.Window",requires:["Imits.model.MiPlan","Imits.widget.SimpleCombo","Imits.widget.SimpleCheckbox"],title:"Change Gene Interest",resizable:false,layout:"fit",closeAction:"hide",cls:"plan editor",constructor:function(a){if(Ext.isIE7||Ext.isIE8){a.width=400}return this.callParent([a])},initComponent:function(){var d=this;this.callParent();var b=true;if(window.CAN_SEE_SUB_PROJECT){b=false}this.form=Ext.create("Ext.form.Panel",{ui:"plain",margin:"0 0 10 0",width:360,layout:"anchor",defaults:{anchor:"100%",labelWidth:150,labelAlign:"right",labelPad:10},items:[{id:"marker_symbol",xtype:"textfield",fieldLabel:"Gene marker symbol",name:"marker_symbol",readOnly:true},{id:"consortium_name",xtype:"simplecombo",fieldLabel:"Consortium",name:"consortium_name",storeOptionsAreSpecial:true,store:window.CONSORTIUM_OPTIONS},{id:"production_centre_name",xtype:"simplecombo",fieldLabel:"Production Centre",name:"production_centre_name",storeOptionsAreSpecial:true,store:window.CENTRE_OPTIONS},{id:"status_name",xtype:"textfield",fieldLabel:"Status",name:"status_name",readOnly:true},{id:"priority_name",xtype:"simplecombo",fieldLabel:"Priority",name:"priority_name",store:window.PRIORITY_OPTIONS},{id:"is_conditional_allele",xtype:"simplecheckbox",fieldLabel:"Conditional allele?",name:"is_conditional_allele"},{id:"is_deletion_allele",xtype:"simplecheckbox",fieldLabel:"Deletion allele?",name:"is_deletion_allele"},{id:"is_cre_knock_in_allele",xtype:"simplecheckbox",fieldLabel:"Cre knock-in allele?",name:"is_cre_knock_in_allele"},{id:"is_cre_bac_allele",xtype:"simplecheckbox",fieldLabel:"Cre BAC allele?",name:"is_cre_bac_allele"},{id:"is_bespoke_allele",xtype:"simplecheckbox",fieldLabel:"Bespoke allele?",name:"is_bespoke_allele",hidden:b},{id:"comment",xtype:"textfield",fieldLabel:"Allele Type Comment",name:"comment"},{id:"sub_project_name",xtype:"simplecombo",fieldLabel:"Sub-Project",name:"sub_project_name",storeOptionsAreSpecial:true,store:window.SUB_PROJECT_OPTIONS,hidden:b},{id:"number_of_es_cells_starting_qc",xtype:"simplenumberfield",fieldLabel:"# of ES Cells starting QC",name:"number_of_es_cells_starting_qc"},{id:"number_of_es_cells_passing_qc",xtype:"simplenumberfield",fieldLabel:"# of ES Cells passing QC",name:"number_of_es_cells_passing_qc"},{id:"es_qc_comment_name",xtype:"simplecombo",fieldLabel:"ES QC Comment",name:"es_qc_comment_name",storeOptionsAreSpecial:true,store:window.ES_QC_COMMENT_NAMES}],buttons:[{id:"update-button",text:"<strong>Update</strong>",handler:function(g){g.disable();var h=null;if(Ext.isEmpty(d.miPlan.get("number_of_es_cells_passing_qc"))&&!Ext.isEmpty(d.form.getComponent("number_of_es_cells_passing_qc").getValue())){if(d.form.getComponent("number_of_es_cells_passing_qc").getValue()==0){h='Saving these changes will force the status to "Aborted - ES Cell QC Failed"'}else{h='Saving these changes will force the status to "Assigned - ES Cell QC Complete"'}}else{if(Ext.isEmpty(d.miPlan.get("number_of_es_cells_starting_qc"))&&!Ext.isEmpty(d.form.getComponent("number_of_es_cells_starting_qc").getValue())){h='Saving these changes will force the status to "Assigned - ES Cell QC In Progress"'}}if(!Ext.isEmpty(h)){Ext.Msg.show({title:"Notice",msg:h+" - is that OK?",buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,closable:false,fn:function(i){if(i==="yes"){d.updateAndHide()}else{g.enable()}}})}else{d.updateAndHide()}}},{text:"Cancel",handler:function(){d.hide()}}]});var e=Ext.create("Ext.panel.Panel",{ui:"plain",layout:{type:"hbox",align:"stretchmax"},margin:"0 0 5 0",items:[{xtype:"label",text:"Delete interest?",cls:"x-form-item-label",margin:"0 5 0 0"},{xtype:"button",id:"delete-button",text:"Delete",width:60,handler:function(g){g.hide();e.getComponent("delete-confirmation-button").show()}},{xtype:"button",id:"delete-confirmation-button",text:"Are you sure?",width:100,hidden:true,handler:function(g){d.setLoading(true);d.miPlan.destroy({success:function(){d.setLoading(false);d.hide()}});g.hide();e.getComponent("delete-button").show()}}]});var f=Ext.create("Ext.panel.Panel",{ui:"plain",layout:{type:"hbox",align:"stretchmax"},margin:"0 0 5 0",items:[{xtype:"label",text:"Withdraw interest",cls:"x-form-item-label",margin:"0 5 0 0"},{xtype:"button",id:"withdraw-button",text:"Withdraw",width:60,handler:function(g){g.hide();f.getComponent("withdraw-confirmation-button").show()}},{xtype:"button",id:"withdraw-confirmation-button",text:"Are you sure?",width:100,hidden:true,handler:function(h){d.setLoading(true);var g=d.miPlan;g.set("withdrawn",true);d.miPlan.save({success:function(){d.setLoading(false);d.hide()}});h.hide();f.getComponent("withdraw-button").show()}}]});var a=Ext.create("Ext.panel.Panel",{ui:"plain",layout:{type:"hbox",align:"stretchmax"},margin:"0 0 5 0",items:[{xtype:"label",text:"Inactivate plan?",cls:"x-form-item-label",margin:"0 5 0 0"},{xtype:"button",id:"inactivate-button",text:"Inactivate",width:60,handler:function(g){g.hide();a.getComponent("inactivate-confirmation-button").show()}},{xtype:"button",id:"inactivate-confirmation-button",text:"Are you sure?",width:100,hidden:true,handler:function(h){d.setLoading(true);var g=d.miPlan;g.set("is_active",false);d.miPlan.save({success:function(){d.setLoading(false);d.hide()}});h.hide();a.getComponent("inactivate-button").show()}}]});var c=520;if(window.CAN_SEE_SUB_PROJECT){c=540}this.add(Ext.create("Ext.panel.Panel",{height:c,ui:"plain",layout:{type:"vbox",align:"stretchmax"},padding:5,items:[d.form,e,f,a]}));d.updateButton=Ext.getCmp("update-button");this.addListener("hide",function(){d.updateButton.enable()});d.withdrawButton=Ext.getCmp("withdraw-button");d.inactivateButton=Ext.getCmp("inactivate-button");this.fields=this.form.items.keys;this.updateableFields=this.form.items.filterBy(function(g){return g.readOnly!=true}).keys},edit:function(b){var a=this;Imits.model.MiPlan.load(b,{success:function(c){a.miPlan=c;Ext.each(a.fields,function(e){var f=a.form.getComponent(e);if(f){f.setValue(a.miPlan.get(e))}});a.show();var d=a.form.getComponent("consortium_name");if(d&&(c.get("mi_attempts_count")>0||c.get("phenotype_attempts_count")>0)){d.setReadOnly(true)}if(Ext.Array.indexOf(window.WITHDRAWABLE_STATUSES,c.get("status_name"))==-1){a.withdrawButton.disable()}else{a.withdrawButton.enable()}}})},updateAndHide:function(){var a=this;Ext.each(this.updateableFields,function(b){var c=a.form.getComponent(b);if(c){a.miPlan.set(b,c.getValue())}});a.miPlan.save({success:function(){a.hide()},failure:function(){a.updateButton.enable()}})}});Ext.define("Ext.ux.RowExpander",{extend:"Ext.AbstractPlugin",requires:["Ext.grid.feature.RowBody","Ext.grid.feature.RowWrap"],alias:"plugin.rowexpander",rowBodyTpl:null,expandOnEnter:true,expandOnDblClick:true,selectRowOnExpand:false,rowBodyTrSelector:".x-grid-rowbody-tr",rowBodyHiddenCls:"x-grid-row-body-hidden",rowCollapsedCls:"x-grid-row-collapsed",renderer:function(d,b,a,c,e){if(e===0){b.tdCls="x-grid-td-expander"}return'<div class="x-grid-row-expander">&#160;</div>'},constructor:function(){this.callParent(arguments);var b=this.getCmp();this.recordsExpanded={};if(!this.rowBodyTpl){Ext.Error.raise("The 'rowBodyTpl' config is required and is not defined.")}var a=Ext.create("Ext.XTemplate",this.rowBodyTpl),c=[{ftype:"rowbody",columnId:this.getHeaderId(),recordsExpanded:this.recordsExpanded,rowBodyHiddenCls:this.rowBodyHiddenCls,rowCollapsedCls:this.rowCollapsedCls,getAdditionalData:this.getRowBodyFeatureData,getRowBodyContents:function(d){return a.applyTemplate(d)}},{ftype:"rowwrap"}];if(b.features){b.features=c.concat(b.features)}else{b.features=c}},init:function(a){this.callParent(arguments);a.headerCt.insert(0,this.getHeaderConfig());a.on("render",this.bindView,this,{single:true})},getHeaderId:function(){if(!this.headerId){this.headerId=Ext.id()}return this.headerId},getRowBodyFeatureData:function(c,a,b,f){var d=Ext.grid.feature.RowBody.prototype.getAdditionalData.apply(this,arguments),e=this.columnId;d.rowBodyColspan=d.rowBodyColspan-1;d.rowBody=this.getRowBodyContents(c);d.rowCls=this.recordsExpanded[b.internalId]?"":this.rowCollapsedCls;d.rowBodyCls=this.recordsExpanded[b.internalId]?"":this.rowBodyHiddenCls;d[e+"-tdAttr"]=' valign="top" rowspan="2" ';if(f[e+"-tdAttr"]){d[e+"-tdAttr"]+=f[e+"-tdAttr"]}return d},bindView:function(){var a=this.getCmp().getView(),b;if(!a.rendered){a.on("render",this.bindView,this,{single:true})}else{b=a.getEl();if(this.expandOnEnter){this.keyNav=Ext.create("Ext.KeyNav",b,{enter:this.onEnter,scope:this})}if(this.expandOnDblClick){a.on("itemdblclick",this.onDblClick,this)}this.view=a}},onEnter:function(h){var b=this.view,g=b.store,j=b.getSelectionModel(),a=j.getSelection(),f=a.length,c=0,d;for(;c<f;c++){d=g.indexOf(a[c]);this.toggleRow(d)}},toggleRow:function(e){var d=this.view.getNode(e),f=Ext.get(d),b=Ext.get(f).down(this.rowBodyTrSelector),a=this.view.getRecord(d),c=this.getCmp();if(f.hasCls(this.rowCollapsedCls)){f.removeCls(this.rowCollapsedCls);b.removeCls(this.rowBodyHiddenCls);this.recordsExpanded[a.internalId]=true;this.view.fireEvent("expandbody",d,a,b.dom)}else{f.addCls(this.rowCollapsedCls);b.addCls(this.rowBodyHiddenCls);this.recordsExpanded[a.internalId]=false;this.view.fireEvent("collapsebody",d,a,b.dom)}if(!c.isFixedHeight()){c.doComponentLayout()}this.view.up("gridpanel").invalidateScroller()},onDblClick:function(b,a,d,c,f){this.toggleRow(d)},getHeaderConfig:function(){var c=this,b=Ext.Function.bind(c.toggleRow,c),a=c.selectRowOnExpand;return{id:this.getHeaderId(),width:24,sortable:false,resizable:false,draggable:false,hideable:false,menuDisabled:true,cls:Ext.baseCSSPrefix+"grid-header-special",renderer:function(e,d){d.tdCls=Ext.baseCSSPrefix+"grid-cell-special";return'<div class="'+Ext.baseCSSPrefix+'grid-row-expander">&#160;</div>'},processEvent:function(i,f,d,g,h,j){if(i=="mousedown"&&j.getTarget(".x-grid-row-expander")){var k=j.getTarget(".x-grid-row");b(k);return a}}}}});function splitResultString(a){var c=[];var b=/^\[(.+)\:(.+)\:(\d+)\]$/;Ext.Array.each(a.split("<br/>"),function(d){var e=b.exec(d);c.push({consortium:e[1],production_centre:e[2],count:e[3]})});return c}function printMiPlanString(a){var b="["+a.consortium;if(!Ext.isEmpty(a.production_centre)){b=b+":"+a.production_centre}if(!Ext.isEmpty(a.status_name)){b=b+":"+a.status_name}b=b+"]";return b}Ext.define("Imits.widget.GeneGrid",{extend:"Imits.widget.Grid",requires:["Imits.model.Gene","Imits.widget.grid.RansackFiltersFeature","Imits.widget.SimpleCombo","Imits.widget.MiPlanEditor","Ext.ux.RowExpander","Ext.selection.CheckboxModel"],title:"Please Select the Genes You Would Like to Register Interest In*",iconCls:"icon-grid",columnLines:true,store:{model:"Imits.model.Gene",autoLoad:true,remoteSort:true,remoteFilter:true,pageSize:20},selModel:Ext.create("Ext.selection.CheckboxModel"),features:[{ftype:"ransack_filters",local:false}],columns:[{header:"Gene",dataIndex:"marker_symbol",readOnly:true,renderer:function(a){return Ext.String.format('<a href="http://www.knockoutmouse.org/martsearch/search?query={0}" target="_blank">{0}</a>',a)}},{header:"Production History",dataIndex:"production_history_link",renderer:function(d,b,a){var c=a.getId();return Ext.String.format('<a href="{0}/gene/{1}/network_graph">Production Graph</a>',window.basePath,c)},sortable:false},{header:"# IKMC Projects",dataIndex:"ikmc_projects_count",readOnly:true},{header:"# Clones",dataIndex:"pretty_print_types_of_cells_available",readOnly:true,sortable:false},{header:"Non-Assigned Plans",dataIndex:"non_assigned_mi_plans",readOnly:true,sortable:false,width:250,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="non_assigned_mi_plans">','<a class="mi-plan" data-marker_symbol="{parent.marker_symbol}" data-id="{id}" data-string="{[this.prettyPrintMiPlan(values)]}" href="#">{[this.prettyPrintMiPlan(values)]}</a><br/>',"</tpl>",{prettyPrintMiPlan:printMiPlanString})},{header:"Assigned Plans",dataIndex:"assigned_mi_plans",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="assigned_mi_plans">','<a class="mi-plan" data-marker_symbol="{parent.marker_symbol}" data-id="{id}" data-string="{[this.prettyPrintMiPlan(values)]}" href="#">{[this.prettyPrintMiPlan(values)]}</a><br/>',"</tpl>",{prettyPrintMiPlan:printMiPlanString})},{header:"Aborted MIs",dataIndex:"pretty_print_aborted_mi_attempts",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedMIs(pretty_print_aborted_mi_attempts)">','<a href="'+window.basePath+'/mi_attempts?q[terms]={parent.marker_symbol}&q[production_centre_name]={production_centre}" target="_blank">[{consortium}:{production_centre}:{count}]</a></br>',"</tpl>",{processedMIs:splitResultString})},{header:"MIs in Progress",dataIndex:"pretty_print_mi_attempts_in_progress",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedMIs(pretty_print_mi_attempts_in_progress)">','<a href="'+window.basePath+'/mi_attempts?q[terms]={parent.marker_symbol}&q[production_centre_name]={production_centre}" target="_blank">[{consortium}:{production_centre}:{count}]</a></br>',"</tpl>",{processedMIs:splitResultString})},{header:"Genotype Confirmed MIs",dataIndex:"pretty_print_mi_attempts_genotype_confirmed",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedMIs(pretty_print_mi_attempts_genotype_confirmed)">','<a href="'+window.basePath+'/mi_attempts?q[terms]={parent.marker_symbol}&q[production_centre_name]={production_centre}" target="_blank">[{consortium}:{production_centre}:{count}]</a></br>',"</tpl>",{processedMIs:splitResultString})},{header:"Phenotype Attempts",dataIndex:"pretty_print_phenotype_attempts",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedMIs(pretty_print_phenotype_attempts)">','<a href="'+window.basePath+'/phenotype_attempts?q[terms]={parent.marker_symbol}&q[production_centre_name]={production_centre}" target="_blank">[{consortium}:{production_centre}:{count}]</a></br>',"</tpl>",{processedMIs:splitResultString})}],createComboBox:function(f,d,a,b,c,e){if(c){b=Ext.Array.merge([null],b)}return Ext.create("Imits.widget.SimpleCombo",{id:f+"Combobox",store:b,fieldLabel:d,labelAlign:"right",labelWidth:a,storeOptionsAreSpecial:true,hidden:e})},registerInterestHandler:function(){var e=this;var d=0;var b=e.getSelectionModel().selected;var h=[];var f=e.consortiumCombo.getSubmitValue();var c=e.centreCombo.getSubmitValue();var g=e.subprojectCombo.getSubmitValue();var a=e.priorityCombo.getSubmitValue();if(b.length==0){alert("You must select some genes to register interest in");return}if(f==null){alert("You must select a consortium");return}if(a==null){alert("You must selct a priority");return}e.setLoading(true);b.each(function(j){var k=j.raw.marker_symbol;var i=Ext.create("Imits.model.MiPlan",{marker_symbol:k,consortium_name:f,production_centre_name:c,sub_project_name:g,priority_name:a});i.save({failure:function(){h.push(k)},callback:function(){d++;if(d==b.length){if(!Ext.isEmpty(h)){alert("An error occured trying to register interest on the following genes: "+h.join(", ")+". Please try again.")}e.reloadStore();e.setLoading(false)}}})})},initMiPlanEditor:function(){var a=this;this.miPlanEditor=Ext.create("Imits.widget.MiPlanEditor",{listeners:{hide:{fn:function(){a.reloadStore();a.setLoading(false)}}}});Ext.get(a.renderTo).on("click",function(b,c){var d=c.getAttribute("data-id");a.setLoading("Editing gene interest....");a.miPlanEditor.edit(d)},a,{delegate:"a.mi-plan"})},initComponent:function(){var b=this;b.callParent();b.addDocked(Ext.create("Ext.toolbar.Paging",{store:b.getStore(),dock:"bottom",displayInfo:true}));var a=true;if(window.CAN_SEE_SUB_PROJECT){a=false}b.consortiumCombo=b.createComboBox("consortium","Consortium",65,window.CONSORTIUM_OPTIONS,false,false);b.centreCombo=b.createComboBox("production_centre","Production Centre",100,window.CENTRE_OPTIONS,true,false);b.subprojectCombo=b.createComboBox("sub_project","Sub Project",65,window.SUB_PROJECT_OPTIONS,false,a);b.priorityCombo=b.createComboBox("priority","Priority",47,window.PRIORITY_OPTIONS,false,false);b.addDocked(Ext.create("Ext.toolbar.Toolbar",{dock:"top",items:[b.consortiumCombo,b.centreCombo,b.subprojectCombo,b.priorityCombo,"  ",{id:"register_interest_button",text:"Register Interest",cls:"x-btn-text-icon",iconCls:"icon-add",grid:b,handler:function(){b.registerInterestHandler()}}]}));this.initMiPlanEditor()}});Ext.define("Imits.widget.SimpleNumberField",{extend:"Ext.form.field.Number",alias:"widget.simplenumberfield",minValue:0,hideTrigger:true,keyNavEnabled:false,mouseWheelEnabled:false,allowDecimals:false});Ext.define("Imits.widget.QCCombo",{extend:"Imits.widget.SimpleCombo",alias:"widget.qccombo",store:window.MI_ATTEMPT_QC_OPTIONS});Ext.define("Imits.widget.grid.BoolGridColumn",{extend:"Ext.grid.Column",alias:"widget.boolgridcolumn",editor:{xtype:"checkbox",cls:"x-grid-checkheader-editor"},renderer:function(b){var a="x-grid-checkheader";if(b===true){a+=" x-grid-checkheader-checked"}return'<div class="'+a+'"></div>'},filter:{type:"boolean",defaultValue:null}});Ext.define("Imits.widget.grid.MiAttemptRansackFiltersFeature",{extend:"Imits.widget.grid.RansackFiltersFeature",alias:"feature.mi_attempt_ransack_filters",encode:false,constructor:function(b){this.callParent([b]);var c=window.MI_ATTEMPT_SEARCH_PARAMS.production_centre_name;var a=window.MI_ATTEMPT_SEARCH_PARAMS.status_name;if(!Ext.isEmpty(c)){this.addFilter({type:"string",dataIndex:"production_centre_name",value:c})}if(!Ext.isEmpty(a)){this.addFilter({type:"string",dataIndex:"status_name",value:a})}},buildQuery:function(b){var c=this.callParent([b]);var a=window.MI_ATTEMPT_SEARCH_PARAMS.terms;if(!Ext.isEmpty(a)){a=a.split("\n");c["q[es_cell_marker_symbol_or_es_cell_name_or_colony_name_ci_in][]"]=a}return c}});Ext.define("Imits.widget.grid.SimpleDateColumn",{extend:"Ext.grid.column.Date",alias:"widget.simpledatecolumn",format:"d-m-Y",editor:{xtype:"datefield",format:"d-m-Y"},filter:{type:"date"}});function splitString(a){var b=[];Ext.Array.each(a.split(", "),function(c){b.push({distributionCentre:c})});return b}Ext.define("Imits.widget.MiGrid",{extend:"Imits.widget.Grid",requires:["Imits.model.MiAttempt","Imits.widget.SimpleNumberField","Imits.widget.SimpleCombo","Imits.widget.QCCombo","Imits.widget.grid.BoolGridColumn","Imits.widget.grid.MiAttemptRansackFiltersFeature","Imits.widget.grid.SimpleDateColumn"],title:"Micro-Injection Attempts",store:{model:"Imits.model.MiAttempt",autoLoad:true,autoSync:true,remoteSort:true,pageSize:20},selType:"rowmodel",plugins:[Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:false,clicksToEdit:1})],features:[{ftype:"mi_attempt_ransack_filters",local:false}],generateColumns:function(a){var b=[];Ext.Object.each(this.groupedColumns,function(d,c){Ext.Array.each(c,function(e){var f;Ext.each(b,function(g){if(g.dataIndex==e.dataIndex&&g.header==e.header){f=g}});if(!f){e.tdCls="column-"+e.dataIndex;b.push(e)}})});a.columns=b},generateViews:function(){var a={};var d=Ext.pluck(this.groupedColumns.common,"dataIndex");var c=Ext.Array.merge(d,[]);Ext.Object.each(this.groupedColumns,function(g,e){if(g==="common"||g==="none"){return}var f=Ext.pluck(e,"dataIndex");a[g]=Ext.Array.merge(d,f);c=Ext.Array.merge(c,f)});a.Everything=c;var b=this;Ext.Object.each(this.additionalViewColumns,function(e){a[e]=Ext.Array.merge(d,b.additionalViewColumns[e])});this.views=a},constructor:function(a){if(a==undefined){a={}}this.generateColumns(a);this.generateViews();this.callParent([a])},switchViewButtonConfig:function(c,b){var a=this;return{text:c,enableToggle:true,allowDepress:false,toggleGroup:"mi_grid_view_config",minWidth:100,pressed:(b===true),listeners:{toggle:function(e,g){if(!g){return}function f(){var h=a.views[c];Ext.each(a.columns,function(i){if(Ext.Array.indexOf(h,i.dataIndex)==-1){i.setVisible(false)}else{i.setVisible(true)}});d.hide();Ext.getBody().removeCls("wait")}var d=new Ext.LoadMask(a.getEl(),{msg:"Please wait&hellip;",removeMask:true});Ext.getBody().addCls("wait");d.show();setTimeout(f,100)}}}},initComponent:function(){this.callParent();this.addDocked(Ext.create("Ext.toolbar.Paging",{store:this.getStore(),dock:"bottom",displayInfo:true}));this.addDocked(Ext.create("Ext.container.ButtonGroup",{layout:"hbox",dock:"top",items:[this.switchViewButtonConfig("Everything",true),this.switchViewButtonConfig("Transfer Details"),this.switchViewButtonConfig("Litter Details"),this.switchViewButtonConfig("Chimera Mating Details"),this.switchViewButtonConfig("QC Details"),this.switchViewButtonConfig("Summary")]}))},groupedColumns:{none:[{dataIndex:"id",header:"ID",readOnly:true,hidden:true}],common:[{header:"Edit In Form",dataIndex:"edit_link",renderer:function(d,b,a){var c=a.getId();return Ext.String.format('<a href="{0}/mi_attempts/{1}">Edit in Form</a>',window.basePath,c)},sortable:false},{header:"Phenotype",dataIndex:"phenotype_attempt_new_link",renderer:function(e,b,a){var d=a.getId();var c=a.get("status_name");if(c=="Genotype confirmed"){return Ext.String.format('<a href="{0}/mi_attempts/{1}/phenotype_attempts/new">Create</a>',window.basePath,d)}else{return Ext.String.format("",window.basePath,d)}},sortable:false},{header:"Active Phenotype",dataIndex:"phenotype_attempts_count",readOnly:true,sortable:false,width:115,renderer:function(f,c,b){var d=b.getId();var e=b.get("phenotype_attempts_count");var a=b.get("es_cell_marker_symbol");if(e!=0){return Ext.String.format('<a href="{0}/phenotype_attempts?q[terms]={1}&q[production_centre_name]={2}"></a>',window.basePath,a,e)}else{return Ext.String.format("{0}",e)}}},{dataIndex:"consortium_name",header:"Consortium",readOnly:true,width:115,filter:{type:"list",options:window.MI_ATTEMPT_CONSORTIUM_OPTIONS},sortable:false},{dataIndex:"production_centre_name",header:"Production Centre",readOnly:true,filter:{type:"list",options:window.MI_ATTEMPT_CENTRE_OPTIONS},sortable:false},{dataIndex:"es_cell_name",header:"ES Cell",readOnly:true,sortable:false,filter:{type:"string"}},{dataIndex:"es_cell_marker_symbol",header:"Marker Symbol",width:75,readOnly:true,sortable:false,filter:{type:"string"}},{dataIndex:"es_cell_allele_symbol",header:"Allele symbol",readOnly:true,sortable:false},{xtype:"simpledatecolumn",dataIndex:"mi_date",header:"MI Date"},{dataIndex:"status_name",header:"Status",width:150,readOnly:true,sortable:false,filter:{type:"list",options:window.MI_ATTEMPT_STATUS_OPTIONS}},{dataIndex:"colony_name",header:"Colony Name",editor:"textfield",filter:{type:"string"}},{dataIndex:"pretty_print_distribution_centres",header:"Distribution Centres",readOnly:true,width:180,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedDistributionCentres(pretty_print_distribution_centres)">','<a href="'+window.basePath+'/mi_attempts/{parent.id}#distribution_centres" target="_blank">{distributionCentre}</a></br>',"</tpl>",{processedDistributionCentres:splitString})}],"Transfer Details":[{dataIndex:"blast_strain_name",header:"Blast Strain",sortable:false,renderer:"safeTextRenderer",width:200,editor:{xtype:"simplecombo",store:Ext.Array.merge([""],window.MI_ATTEMPT_STRAIN_OPTIONS),storeOptionsAreSpecial:true,listConfig:{minWidth:200}}},{dataIndex:"total_blasts_injected",header:"Total Blasts Injected",editor:"simplenumberfield"},{dataIndex:"total_transferred",header:"Total Transferred",editor:"simplenumberfield"},{dataIndex:"number_surrogates_receiving",header:"# Surrogates Receiving",editor:"simplenumberfield"}],"Litter Details":[{dataIndex:"total_pups_born",header:"Total Pups Born",editor:"simplenumberfield"},{dataIndex:"total_female_chimeras",header:"Total Female Chimeras",editor:"simplenumberfield"},{dataIndex:"total_male_chimeras",header:"Total Male Chimeras",editor:"simplenumberfield"},{dataIndex:"total_chimeras",header:"Total Chimeras",readOnly:true},{dataIndex:"number_of_males_with_100_percent_chimerism",header:"100% Male Chimerism Levels",editor:"simplenumberfield"},{dataIndex:"number_of_males_with_80_to_99_percent_chimerism",header:"99-80% Male Chimerism Levels",editor:"simplenumberfield"},{dataIndex:"number_of_males_with_40_to_79_percent_chimerism",header:"79-40% Male Chimerism Levels",editor:"simplenumberfield"},{dataIndex:"number_of_males_with_0_to_39_percent_chimerism",header:"39-0% Male Chimerism Levels",editor:"simplenumberfield"}],"Chimera Mating Details":[{dataIndex:"test_cross_strain_name",header:"Test Cross Strain",readOnly:true,sortable:false,renderer:"safeTextRenderer",width:200,editor:{xtype:"simplecombo",store:Ext.Array.merge([""],window.MI_ATTEMPT_STRAIN_OPTIONS),storeOptionsAreSpecial:true,listConfig:{minWidth:200}}},{dataIndex:"colony_background_strain_name",header:"Colony Background Strain",readOnly:true,sortable:false,renderer:"safeTextRenderer",width:200,editor:{xtype:"simplecombo",store:Ext.Array.merge([""],window.MI_ATTEMPT_STRAIN_OPTIONS),storeOptionsAreSpecial:true,listConfig:{minWidth:200}}},{xtype:"simpledatecolumn",dataIndex:"date_chimeras_mated",header:"Date Chimeras Mated"},{dataIndex:"number_of_chimera_matings_attempted",header:"# Chimera Mating Attempted",editor:"simplenumberfield"},{dataIndex:"number_of_chimera_matings_successful",header:"# Chimera Matings Successful",editor:"simplenumberfield"},{dataIndex:"number_of_chimeras_with_glt_from_cct",header:"# Chimeras with Germline Transmission from CCT",editor:"simplenumberfield"},{dataIndex:"number_of_chimeras_with_glt_from_genotyping",header:"No. Chimeras with Germline Transmission from Genotyping",editor:"simplenumberfield"},{dataIndex:"number_of_chimeras_with_0_to_9_percent_glt",header:"# Chimeras with 0-9% GLT",editor:"simplenumberfield"},{dataIndex:"number_of_chimeras_with_10_to_49_percent_glt",header:"# Chimeras with 10-49% GLT",editor:"simplenumberfield"},{dataIndex:"number_of_chimeras_with_50_to_99_percent_glt",header:"No. Chimeras with 50-99% GLT",editor:"simplenumberfield"},{dataIndex:"number_of_chimeras_with_100_percent_glt",header:"No. Chimeras with 100% GLT",editor:"simplenumberfield"},{dataIndex:"total_f1_mice_from_matings",header:"Total F1 Mice from Matings",editor:"simplenumberfield"},{dataIndex:"number_of_cct_offspring",header:"# Coat Colour Transmission Offspring",editor:"simplenumberfield"},{dataIndex:"number_of_het_offspring",header:"# Het Offspring",editor:"simplenumberfield"},{dataIndex:"number_of_live_glt_offspring",header:"# Live GLT Offspring",editor:"simplenumberfield"},{dataIndex:"mouse_allele_type",header:"Mouse Allele Type",editor:{xtype:"simplecombo",store:window.MI_ATTEMPT_MOUSE_ALLELE_TYPE_OPTIONS,listConfig:{minWidth:300}}},{dataIndex:"mouse_allele_symbol",header:"Mouse Allele Symbol",readOnly:true}],"QC Details":[{dataIndex:"qc_southern_blot_result",header:"Southern Blot",sortable:false,editor:"qccombo"},{dataIndex:"qc_five_prime_lr_pcr_result",header:"Five Prime LR PCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_five_prime_cassette_integrity_result",header:"Five Prime Cassette Integrity",sortable:false,editor:"qccombo"},{dataIndex:"qc_tv_backbone_assay_result",header:"TV Backbone Assay",sortable:false,editor:"qccombo"},{dataIndex:"qc_neo_count_qpcr_result",header:"Neo Count QPCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_neo_sr_pcr_result",header:"Neo SR PCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_loa_qpcr_result",header:"LOA QPCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_homozygous_loa_sr_pcr_result",header:"Homozygous LOA SR PCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_lacz_sr_pcr_result",header:"LacZ SR PCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_mutant_specific_sr_pcr_result",header:"Mutant Specific SR PCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_loxp_confirmation_result",header:"LoxP Confirmation",sortable:false,editor:"qccombo"},{dataIndex:"qc_three_prime_lr_pcr_result",header:"Three Prime LR PCR",sortable:false,editor:"qccombo"},{dataIndex:"report_to_public",header:"Report to Public",xtype:"boolgridcolumn"},{dataIndex:"is_active",header:"Active?",xtype:"boolgridcolumn"},{dataIndex:"is_released_from_genotyping",header:"Released From Genotyping",xtype:"boolgridcolumn"}]},additionalViewColumns:{Summary:["emma_status","mouse_allele_type","mouse_allele_symbol"]}});Ext.define("Imits.widget.grid.MiPlanRansackFiltersFeature",{extend:"Imits.widget.grid.RansackFiltersFeature",alias:"feature.mi_plan_ransack_filters",encode:false,constructor:function(a){this.callParent([a]);var b=window.USER_PRODUCTION_CENTRE;this.addFilter({type:"string",dataIndex:"production_centre_name",value:b})}});Ext.define("Imits.widget.MiPlansGrid",{extend:"Imits.widget.Grid",requires:["Imits.model.MiPlan","Imits.widget.grid.MiPlanRansackFiltersFeature","Imits.widget.MiPlanEditor"],title:"Your Plans",iconCls:"icon-grid",columnLines:true,store:{model:"Imits.model.MiPlan",autoLoad:true,remoteSort:true,remoteFilter:true,pageSize:20},selType:"rowmodel",features:[{ftype:"mi_plan_ransack_filters",local:false}],initComponent:function(){var a=this;a.callParent();a.addDocked(Ext.create("Ext.toolbar.Paging",{store:a.getStore(),dock:"bottom",displayInfo:true}));a.miPlanEditor=Ext.create("Imits.widget.MiPlanEditor",{listeners:{hide:{fn:function(){a.reloadStore();a.setLoading(false)}}}});a.addListener("itemclick",function(c,b){var d=b.data.id;a.setLoading("Editing plan....");a.miPlanEditor.edit(d)});a.addListener("afterrender",function(){if(window.CAN_SEE_SUB_PROJECT){var b=Ext.Array.filter(a.columns,function(d){return d.dataIndex==="sub_project_name"})[0];b.setVisible(true);var c=Ext.Array.filter(a.columns,function(d){return d.dataIndex==="is_bespoke_allele"})[0];c.setVisible(true)}})},columns:[{dataIndex:"id",header:"ID",readOnly:true,hidden:true},{dataIndex:"marker_symbol",header:"Marker Symbol",readOnly:true,filter:{type:"string"}},{dataIndex:"consortium_name",header:"Consortium",readOnly:true,width:100,filter:{type:"list",options:window.CONSORTIUM_OPTIONS}},{dataIndex:"production_centre_name",header:"Production Centre",readOnly:true,width:115,filter:{type:"list",options:window.CENTRE_OPTIONS}},{dataIndex:"status_name",header:"Status",readOnly:true,flex:1,filter:{type:"list",options:window.STATUS_OPTIONS}},{dataIndex:"priority_name",header:"Priority",readOnly:true,width:80,filter:{type:"list",options:window.PRIORITY_OPTIONS}},{dataIndex:"is_conditional_allele",header:"Conditional",xtype:"boolgridcolumn",width:60,readOnly:true},{dataIndex:"is_deletion_allele",header:"Deletion",xtype:"boolgridcolumn",width:60,readOnly:true},{dataIndex:"is_cre_knock_in_allele",header:"Cre Knock-in",xtype:"boolgridcolumn",width:60,readOnly:true},{dataIndex:"is_cre_bac_allele",header:"Cre BAC",xtype:"boolgridcolumn",width:60,readOnly:true},{dataIndex:"is_bespoke_allele",header:"Bespoke",xtype:"boolgridcolumn",width:60,readOnly:true,hidden:true},{dataIndex:"sub_project_name",header:"Sub-Project",readOnly:true,width:120,filter:{type:"list",options:window.SUB_PROJECT_OPTIONS},hidden:true}]});Ext.define("Imits.widget.grid.PhenotypeAttemptRansackFiltersFeature",{extend:"Imits.widget.grid.RansackFiltersFeature",alias:"feature.phenotype_attempt_ransack_filters",encode:false,constructor:function(a){this.callParent([a]);var b=window.PHENOTYPE_ATTEMPT_SEARCH_PARAMS.production_centre_name;if(!Ext.isEmpty(b)){this.addFilter({type:"string",dataIndex:"production_centre_name",value:b})}},buildQuery:function(b){var c=this.callParent([b]);var a=window.PHENOTYPE_ATTEMPT_SEARCH_PARAMS.terms;if(!Ext.isEmpty(a)){a=a.split("\n");c["q[marker_symbol_ci_in][]"]=a}return c}});function splitString(a){var b=[];Ext.Array.each(a.split(", "),function(c){b.push({distributionCentre:c})});return b}Ext.define("Imits.widget.PhenotypeAttemptsGrid",{extend:"Imits.widget.Grid",requires:["Imits.model.PhenotypeAttempt","Imits.widget.SimpleNumberField","Imits.widget.grid.PhenotypeAttemptRansackFiltersFeature","Imits.widget.grid.BoolGridColumn"],title:"Phenotype attempts",iconCls:"icon-grid",columnLines:true,store:{model:"Imits.model.PhenotypeAttempt",autoLoad:true,remoteSort:true,pageSize:20},selType:"rowmodel",features:[{ftype:"phenotype_attempt_ransack_filters",local:false}],initComponent:function(){var a=this;a.callParent();a.addDocked(Ext.create("Ext.toolbar.Paging",{store:a.getStore(),dock:"bottom",displayInfo:true}))},columns:[{dataIndex:"id",header:"ID",readOnly:true,hidden:true},{header:"Edit In Form",dataIndex:"edit_link",renderer:function(d,b,a){var c=a.getId();return Ext.String.format('<a href="{0}/phenotype_attempts/{1}">Edit in Form</a>',window.basePath,c)},sortable:false},{dataIndex:"colony_name",header:"Colony Name",editor:"textfield",filter:{type:"string"}},{dataIndex:"consortium_name",header:"Consortium",readOnly:true,width:115,filter:{type:"list",options:window.PHENOTYPE_CONSORTIUM_OPTIONS}},{dataIndex:"production_centre_name",header:"Production Centre",readOnly:true,width:150,filter:{type:"list",options:window.PHENOTYPE_CENTRE_OPTIONS}},{dataIndex:"pretty_print_distribution_centres",header:"Distribution Centres",readOnly:true,width:180,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedDistributionCentres(pretty_print_distribution_centres)">','<a href="'+window.basePath+'/phenotype_attempts/{parent.id}#distribution_centres" target="_blank">{distributionCentre}</a></br>',"</tpl>",{processedDistributionCentres:splitString})},{dataIndex:"marker_symbol",header:"Marker Symbol",readOnly:true,filter:{type:"string"}},{dataIndex:"is_active",header:"Active?",readOnly:true,width:55,xtype:"boolgridcolumn",filter:{type:"boolean"}},{dataIndex:"status_name",header:"Status",readOnly:true,filter:{type:"list",options:window.PHENOTYPE_STATUS_OPTIONS}},{dataIndex:"rederivation_started",header:"Rederivation started",readOnly:true,xtype:"boolgridcolumn",width:115,filter:{type:"boolean"}},{dataIndex:"rederivation_complete",header:"Rederivation complete",readOnly:true,xtype:"boolgridcolumn",width:120,filter:{type:"boolean"}},{dataIndex:"deleter_strain_name",header:"Cre-deleter strain",readOnly:true,filter:{type:"list",options:window.PHENOTYPE_DELETER_STRAIN_OPTIONS}},{dataIndex:"number_of_cre_matings_successful",header:"# Cre Matings successful",readOnly:true,editor:"simplenumberfield",width:140},{dataIndex:"phenotyping_started",header:"Phenotyping Started",readOnly:true,xtype:"boolgridcolumn",width:115,filter:{type:"boolean"}},{dataIndex:"phenotyping_complete",header:"Phenotyping Complete",readOnly:true,xtype:"boolgridcolumn",width:120,filter:{type:"boolean"}}]});