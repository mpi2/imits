Ext.define("Imits.data.JsonReader",{extend:"Ext.data.reader.Json",alias:null,readRecords:function(a){if(!this.getRoot(a)&&!Ext.isEmpty(a.id)){a=[a]}return this.callParent([a])},getResponseData:function(a){if(a.request.options.method=="DELETE"&&a.status==200){return{}}else{return this.callParent([a])}}});Ext.define("Imits.data.JsonWriter",{extend:"Ext.data.writer.Json",writeAllFields:false,write:function(a){var b=this.callParent([a]);b.params.authenticity_token=window.authenticityToken;if(b.jsonData[this.root]&&b.jsonData[this.root]["id"]){delete b.jsonData[this.root]["id"]}if(b.action==="destroy"&&!Ext.isEmpty(b.params)){b.url=Ext.urlAppend(b.url,Ext.urlEncode(b.params));b.jsonData=null;b.params=null}return b}});Ext.define("Imits.Util",{statics:{handleErrorResponse:function(a){var c=Ext.JSON.decode(a.responseText);var b=function(){var d=[];if(c.hasOwnProperty("backtrace")){delete c.backtrace}Ext.Object.each(c,function(f,e){var g=Ext.String.capitalize(f).replace(/_/g," ")+": ";if(Ext.isString(e)){g+=e}else{if(Ext.isArray){g+=e.join(", ")}}d.push(Ext.String.htmlEncode(g))});return d.join("<br/>")};Ext.MessageBox.show({title:"Error",msg:b(c),icon:Ext.MessageBox.ERROR,buttons:Ext.Msg.OK,fn:function(d,f,e){}})},extractValueIfExistent:function(a,c){if(Ext.isEmpty(a)||!a.hasOwnProperty(c)){return undefined}var b=a[c];if(!Ext.isEmpty(b)){return b}else{return undefined}}}});Ext.define("Imits.data.Proxy",{extend:"Ext.data.proxy.Rest",requires:["Imits.data.JsonWriter","Imits.data.JsonReader","Imits.Util"],constructor:function(a){var b=a.resource;var c=b+"s";if(a.resourcePath){c=a.resourcePath}if(open_interface){b="open_"+b;c="open/"+c}this.callParent([{format:"json",url:window.basePath+"/"+c,extraParams:{extended_response:true},startParam:undefined,limitParam:"per_page",sortParam:"sorts",reader:Ext.create("Imits.data.JsonReader",{root:b+"s"}),writer:Ext.create("Imits.data.JsonWriter",{root:b,writeAllFields:false}),listeners:{exception:function(f,e,d){Imits.Util.handleErrorResponse(e)}},encodeSorters:function(d){if(d.length===0){return""}else{var e=d[0];return e.property+" "+e.direction.toLowerCase()}}}])}});Ext.define("Imits.model.Gene",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",readOnly:true},{name:"marker_symbol",readOnly:true},{name:"mgi_accession_id",readOnly:true},{name:"ikmc_projects_count",readOnly:true},{name:"pretty_print_types_of_cells_available",readOnly:true},{name:"non_assigned_mi_plans",readOnly:true},{name:"assigned_mi_plans",readOnly:true},{name:"pretty_print_aborted_mi_attempts",readOnly:true},{name:"pretty_print_mi_attempts_in_progress",readOnly:true},{name:"pretty_print_mi_attempts_genotype_confirmed",readOnly:true},{name:"pretty_print_phenotype_attempts",readOnly:true}],proxy:Ext.create("Imits.data.Proxy",{resource:"gene"})});Ext.define("Imits.model.MiAttempt",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",persist:false},{name:"es_cell_name",persist:false},{name:"es_cell_marker_symbol",persist:false},{name:"es_cell_allele_symbol",persist:false},{name:"mi_date",type:"date"},{name:"status_name",persist:false},"colony_name",{name:"consortium_name"},{name:"production_centre_name"},"distribution_centres_attributes",{name:"distribution_centres_formatted_display",readOnly:true},"blast_strain_name",{name:"total_blasts_injected",type:"int"},{name:"total_transferred",type:"int"},{name:"number_surrogates_receiving",type:"int"},{name:"total_pups_born",type:"int"},{name:"total_female_chimeras",type:"int"},{name:"total_male_chimeras",type:"int"},{name:"total_chimeras",type:"int",persist:false},{name:"number_of_males_with_0_to_39_percent_chimerism",type:"int"},{name:"number_of_males_with_40_to_79_percent_chimerism",type:"int"},{name:"number_of_males_with_80_to_99_percent_chimerism",type:"int"},{name:"number_of_males_with_100_percent_chimerism",type:"int"},{name:"emma_status"},{name:"test_cross_strain_name"},{name:"colony_background_strain_name"},{name:"date_chimeras_mated",type:"date"},{name:"number_of_chimera_matings_attempted",type:"int"},{name:"number_of_chimera_matings_successful",type:"int"},{name:"number_of_chimeras_with_glt_from_cct",type:"int"},{name:"number_of_chimeras_with_glt_from_genotyping",type:"int"},{name:"number_of_chimeras_with_0_to_9_percent_glt",type:"int"},{name:"number_of_chimeras_with_10_to_49_percent_glt",type:"int"},{name:"number_of_chimeras_with_50_to_99_percent_glt",type:"int"},{name:"number_of_chimeras_with_100_percent_glt",type:"int"},{name:"total_f1_mice_from_matings",type:"int"},{name:"number_of_cct_offspring",type:"int"},{name:"number_of_het_offspring",type:"int"},{name:"number_of_live_glt_offspring",type:"int"},{name:"mouse_allele_type",readOnly:true},{name:"mouse_allele_symbol",readOnly:true},"qc_southern_blot_result","qc_five_prime_lr_pcr_result","qc_five_prime_cassette_integrity_result","qc_tv_backbone_assay_result","qc_neo_count_qpcr_result","qc_lacz_count_qpcr_result","qc_neo_sr_pcr_result","qc_loa_qpcr_result","qc_homozygous_loa_sr_pcr_result","qc_lacz_sr_pcr_result","qc_mutant_specific_sr_pcr_result","qc_loxp_confirmation_result","qc_three_prime_lr_pcr_result","qc_critical_region_qpcr_result","qc_loxp_srpcr_result","qc_loxp_srpcr_and_sequencing_result",{name:"report_to_public",type:"boolean"},{name:"is_active",type:"boolean"},{name:"is_released_from_genotyping",type:"boolean"},{name:"phenotype_attempts_count",type:"int",readOnly:true,persist:false},{name:"mi_plan_id",type:"int"},{name:"mgi_accession_id"},],proxy:Ext.create("Imits.data.Proxy",{resource:"mi_attempt"})});Ext.define("Imits.model.MiPlan",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",persist:false},{name:"marker_symbol"},{name:"consortium_name"},{name:"production_centre_name"},{name:"status_name"},{name:"priority_name"},{name:"sub_project_name"},{name:"number_of_es_cells_received"},{name:"es_cells_received_on",type:"date"},{name:"es_cells_received_from_name"},{name:"number_of_es_cells_starting_qc"},{name:"number_of_es_cells_passing_qc"},{name:"withdrawn",defaultValue:false},{name:"is_active",defaultValue:true},{name:"is_bespoke_allele",defaultValue:false},{name:"es_qc_comment_name"},{name:"completion_note"},{name:"phenotype_only",defaultValue:false},{name:"is_conditional_allele",defaultValue:false},{name:"recovery",defaultValue:false},{name:"is_deletion_allele",defaultValue:false},{name:"is_cre_knock_in_allele",defaultValue:false},{name:"is_cre_bac_allele",defaultValue:false},{name:"is_conditional_allele",defaultValue:false},{name:"conditional_tm1c",defaultValue:false},{name:"point_mutation",defaultValue:false},{name:"conditional_point_mutation",defaultValue:false},{name:"allele_symbol_superscript",defaultValue:false},{name:"ignore_available_mice",defaultValue:false},{name:"comment"},{name:"mi_attempts_count",readOnly:true,persist:false},{name:"phenotype_attempts_count",readOnly:true,persist:false}],proxy:Ext.create("Imits.data.Proxy",{resource:"mi_plan"})});Ext.define("Imits.model.PhenotypeAttempt",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",persist:false},{name:"colony_name"},{name:"consortium_name"},{name:"production_centre_name"},{name:"distribution_centres_formatted_display",readOnly:true},{name:"mi_attempt_colony_name",readOnly:true,persist:false},{name:"marker_symbol"},{name:"is_active"},{name:"status_name",persist:false,readOnly:true},{name:"rederivation_started"},{name:"rederivation_complete"},{name:"deleter_strain_name"},{name:"number_of_cre_matings_successful"},{name:"phenotyping_started"},{name:"phenotyping_complete"},{name:"mi_plan_id",type:"int"},{name:"mgi_accession_id"}],proxy:Ext.create("Imits.data.Proxy",{resource:"phenotype_attempt"})});Ext.define("Imits.model.SolrUpdateQueueItem",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",persist:false},{name:"reference"},{name:"action"},{name:"created_at"}],proxy:Ext.create("Imits.data.Proxy",{resource:"solr_update_queue_item",resourcePath:"solr_update/queue/items"})});Ext.define("Imits.model.Contact",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",persist:false},{name:"email"}],proxy:Ext.create("Imits.data.Proxy",{resource:"admin_contact",resourcePath:"admin/contacts"})});Ext.define("Imits.model.Notification",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",persist:false},{name:"contact_id"},{name:"contact_email"},{name:"gene_id"},{name:"gene_marker_symbol"},{name:"welcome_email_sent"},{name:"last_email_sent"},{name:"welcome_email"},{name:"last_email"},{name:"updated_at"}],proxy:Ext.create("Imits.data.Proxy",{resource:"admin_notification",resourcePath:"admin/notifications"})});Ext.define("Imits.model.ProductionGoal",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",persist:false},{name:"consortium_name"},{name:"year"},{name:"month"},{name:"mi_goal"},{name:"gc_goal"}],proxy:Ext.create("Imits.data.Proxy",{resource:"production_goal"})});Ext.define("MiPlanListViewModel",{extend:"Ext.data.Model",fields:["id","consortium_name","production_centre_name","sub_project_name","is_conditional_allele","conditional_tm1c","is_deletion_allele","is_cre_knock_in_allele","is_cre_bac_allele","point_mutation","conditional_point_mutation","phenotype_only","is_active"]});Ext.define("Imits.model.TrackingGoal",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",persist:false},{name:"production_centre_name"},{name:"year"},{name:"month"},{name:"goal"},{name:"goal_type"}],proxy:Ext.create("Imits.data.Proxy",{resource:"tracking_goal"})});Ext.define("Imits.model.Centre",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",persist:false},{name:"name"},{name:"contact_name"},{name:"contact_email"}],proxy:Ext.create("Imits.data.Proxy",{resource:"centre"})});Ext.define("Imits.model.Strain",{extend:"Ext.data.Model",requires:["Imits.data.Proxy"],fields:[{name:"id",type:"int",persist:false},{name:"name"},{name:"mgi_strain_accession_id"},{name:"mgi_strain_name"}],proxy:Ext.create("Imits.data.Proxy",{resource:"strain"})});Ext.define("Imits.widget.ManageResizeWithBrowserFrame",{manageResize:function(){var b=window.innerHeight-30;if(!b){b=document.documentElement.clientHeight-30}var a=b-this.getEl().getTop();if(a<200){a=200}this.setHeight(a);this.setWidth(this.getEl().up("div").getWidth()-1);this.doLayout()}});Ext.define("Imits.widget.Grid",{extend:"Ext.grid.Panel",mixins:["Imits.widget.ManageResizeWithBrowserFrame"],reloadStore:function(){var a=this.getStore();a.sync();a.load()}});Ext.define("Ext.ux.grid.menu.ListMenu",{extend:"Ext.menu.Menu",labelField:"text",loadingText:"Loading...",loadOnShow:true,single:false,constructor:function(b){var e=this,c,d,a,f;e.selected=[];e.addEvents("checkchange");e.callParent([b=b||{}]);if(!b.store&&b.options){c=[];for(d=0,a=b.options.length;d<a;d++){f=b.options[d];switch(Ext.type(f)){case"array":c.push(f);break;case"object":c.push([f.id,f[e.labelField]]);break;case"string":c.push([f,f]);break}}e.store=Ext.create("Ext.data.ArrayStore",{fields:["id",e.labelField],data:c,listeners:{load:e.onLoad,scope:e}});e.loaded=true;e.autoStore=true}else{e.add({text:e.loadingText,iconCls:"loading-indicator"});e.store.on("load",e.onLoad,e)}},destroy:function(){var b=this,a=b.store;if(a){if(b.autoStore){a.destroyStore()}else{a.un("unload",b.onLoad,b)}}b.callParent()},show:function(){if(this.loadOnShow&&!this.loaded&&!this.store.loading){this.store.load()}this.callParent()},onLoad:function(c,b){var g=this,f,h,d,a,e={checkchange:g.checkChange,scope:g};Ext.suspendLayouts();g.removeAll(true);f=g.single?Ext.id():null;for(d=0,a=b.length;d<a;d++){h=b[d].get("id");g.add(Ext.create("Ext.menu.CheckItem",{text:b[d].get(g.labelField),group:f,checked:Ext.Array.contains(g.selected,h),hideOnClick:false,value:h,listeners:e}))}g.loaded=true;Ext.resumeLayouts(true);g.fireEvent("load",g,b)},getSelected:function(){return this.selected},setSelected:function(a){a=this.selected=[].concat(a);if(this.loaded){this.items.each(function(d){d.setChecked(false,true);for(var c=0,b=a.length;c<b;c++){if(d.value==a[c]){d.setChecked(true,true)}}},this)}},checkChange:function(b,a){var c=[];this.items.each(function(d){if(d.checked){c.push(d.value)}},this);this.selected=c;this.fireEvent("checkchange",b,a)}});Ext.define("Ext.ux.grid.menu.RangeMenu",{extend:"Ext.menu.Menu",fieldCls:"Ext.form.field.Number",itemIconCls:{gt:"ux-rangemenu-gt",lt:"ux-rangemenu-lt",eq:"ux-rangemenu-eq"},fieldLabels:{gt:"Greater Than",lt:"Less Than",eq:"Equal To"},menuItemCfgs:{emptyText:"Enter Number...",selectOnFocus:false,width:155},menuItems:["lt","gt","-","eq"],constructor:function(a){var f=this,c,g,b,e,h,d,j;f.callParent(arguments);c=f.fields=f.fields||{};g=f.fieldCfg=f.fieldCfg||{};f.addEvents("update");f.updateTask=Ext.create("Ext.util.DelayedTask",f.fireUpdate,f);for(b=0,e=f.menuItems.length;b<e;b++){h=f.menuItems[b];if(h!=="-"){d={itemId:"range-"+h,enableKeyEvents:true,hideLabel:false,fieldLabel:f.iconTpl.apply({cls:f.itemIconCls[h]||"no-icon",text:f.fieldLabels[h]||"",src:Ext.BLANK_IMAGE_URL}),labelSeparator:"",labelWidth:29,labelStyle:"position: relative;",listeners:{scope:f,change:f.onInputChange,keyup:f.onInputKeyUp,el:{click:function(i){i.stopPropagation()}}},activate:Ext.emptyFn,deactivate:Ext.emptyFn};Ext.apply(d,Ext.applyIf(c[h]||{},g[h]),f.menuItemCfgs);j=d.fieldCls||f.fieldCls;h=c[h]=Ext.create(j,d)}f.add(h)}},fireUpdate:function(){this.fireEvent("update",this)},getValue:function(){var a={},b,c;for(b in this.fields){c=this.fields[b];if(c.isValid()&&c.getValue()!==null){a[b]=c.getValue()}}return a},setValue:function(c){var b=this,a,d;for(a in b.fields){d=b.fields[a];d.suspendEvents();d.setValue(a in c?c[a]:"");d.resumeEvents()}b.fireEvent("update",b)},onInputKeyUp:function(b,a){if(a.getKey()===a.RETURN&&b.isValid()){a.stopEvent();this.hide()}},onInputChange:function(f){var e=this,c=e.fields,b=c.eq,d=c.gt,a=c.lt;if(f==b){if(d){d.setValue(null)}if(a){a.setValue(null)}}else{b.setValue(null)}this.updateTask.delay(this.updateBuffer)}},function(){this.prototype.iconTpl=Ext.create("Ext.XTemplate",'<img src="{src}" alt="{text}" class="'+Ext.baseCSSPrefix+'menu-item-icon ux-rangemenu-icon {cls}" />')});Ext.define("Ext.ux.grid.filter.Filter",{extend:"Ext.util.Observable",active:false,dataIndex:null,menu:null,updateBuffer:500,constructor:function(a){Ext.apply(this,a);this.addEvents("activate","deactivate","serialize","update");Ext.ux.grid.filter.Filter.superclass.constructor.call(this);this.menu=this.createMenu(a);this.init(a);if(a&&a.value){this.setValue(a.value);this.setActive(a.active!==false,true);delete a.value}},destroy:function(){if(this.menu){this.menu.destroy()}this.clearListeners()},init:Ext.emptyFn,createMenu:function(a){return Ext.create("Ext.menu.Menu",a)},getValue:Ext.emptyFn,setValue:Ext.emptyFn,isActivatable:function(){return true},getSerialArgs:Ext.emptyFn,validateRecord:function(){return true},serialize:function(){var a=this.getSerialArgs();this.fireEvent("serialize",a,this);return a},fireUpdate:function(){if(this.active){this.fireEvent("update",this)}this.setActive(this.isActivatable())},setActive:function(b,a){if(this.active!=b){this.active=b;if(a!==true){this.fireEvent(b?"activate":"deactivate",this)}}}});Ext.define("Ext.ux.grid.filter.BooleanFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.boolean",defaultValue:false,yesText:"Yes",noText:"No",init:function(a){var c=Ext.id();this.options=[Ext.create("Ext.menu.CheckItem",{text:this.yesText,group:c,checked:this.defaultValue===true}),Ext.create("Ext.menu.CheckItem",{text:this.noText,group:c,checked:this.defaultValue===false})];this.menu.add(this.options[0],this.options[1]);for(var b=0;b<this.options.length;b++){this.options[b].on("click",this.fireUpdate,this);this.options[b].on("checkchange",this.fireUpdate,this)}},getValue:function(){return this.options[0].checked},setValue:function(a){this.options[a?0:1].setChecked(true)},getSerialArgs:function(){var a={type:"boolean",value:this.getValue()};return a},validateRecord:function(a){return a.get(this.dataIndex)==this.getValue()}});Ext.define("Ext.ux.grid.filter.DateFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.date",uses:["Ext.picker.Date","Ext.menu.Menu"],afterText:"After",beforeText:"Before",compareMap:{before:"lt",after:"gt",on:"eq"},dateFormat:"m/d/Y",menuItems:["before","after","-","on"],menuItemCfgs:{selectOnFocus:true,width:125},onText:"On",pickerOpts:{},init:function(d){var g=this,c,e,a,f,b;c=Ext.apply(g.pickerOpts,{xtype:"datepicker",minDate:g.minDate,maxDate:g.maxDate,format:g.dateFormat,listeners:{scope:g,select:g.onMenuSelect}});g.fields={};for(e=0,a=g.menuItems.length;e<a;e++){f=g.menuItems[e];if(f!=="-"){b={itemId:"range-"+f,text:g[f+"Text"],menu:Ext.create("Ext.menu.Menu",{items:[Ext.apply(c,{itemId:f,listeners:{select:g.onPickerSelect,scope:g}}),]}),listeners:{scope:g,checkchange:g.onCheckChange}};f=g.fields[f]=Ext.create("Ext.menu.CheckItem",b)}g.menu.add(f)}g.values={}},onCheckChange:function(e,d){var c=this,b=e.menu.items.first(),f=b.itemId,a=c.values;if(d){a[f]=b.getValue()}else{delete a[f]}c.setActive(c.isActivatable());c.fireEvent("update",c)},onInputKeyUp:function(c,b){var a=b.getKey();if(a==b.RETURN&&c.isValid()){b.stopEvent();this.menu.hide()}},onMenuSelect:function(c,b){var a=this.fields,d=this.fields[c.itemId];d.setChecked(true);if(d==a.on){a.before.setChecked(false,true);a.after.setChecked(false,true)}else{a.on.setChecked(false,true);if(d==a.after&&this.getFieldValue("before")<b){a.before.setChecked(false,true)}else{if(d==a.before&&this.getFieldValue("after")>b){a.after.setChecked(false,true)}}}this.fireEvent("update",this);c.up("menu").hide()},getValue:function(){var b,a={};for(b in this.fields){if(this.fields[b].checked){a[b]=this.getFieldValue(b)}}return a},setValue:function(c,b){var a;for(a in this.fields){if(c[a]){this.getPicker(a).setValue(c[a]);this.fields[a].setChecked(true)}else{if(!b){this.fields[a].setChecked(false)}}}this.fireEvent("update",this)},isActivatable:function(){var a;for(a in this.fields){if(this.fields[a].checked){return true}}return false},getSerialArgs:function(){var a=[];for(var b in this.fields){if(this.fields[b].checked){a.push({type:"date",comparison:this.compareMap[b],value:Ext.Date.format(this.getFieldValue(b),this.dateFormat)})}}return a},getFieldValue:function(a){return this.values[a]},getPicker:function(a){return this.fields[a].menu.items.first()},validateRecord:function(b){var c,e,d=b.get(this.dataIndex),a=Ext.Date.clearTime;if(!Ext.isDate(d)){return false}d=a(d,true).getTime();for(c in this.fields){if(this.fields[c].checked){e=a(this.getFieldValue(c),true).getTime();if(c=="before"&&e<=d){return false}if(c=="after"&&e>=d){return false}if(c=="on"&&e!=d){return false}}}return true},onPickerSelect:function(b,a){this.values[b.itemId]=a;this.fireEvent("update",this)}});Ext.define("Ext.ux.grid.filter.ListFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.list",phpMode:false,init:function(a){this.dt=Ext.create("Ext.util.DelayedTask",this.fireUpdate,this)},createMenu:function(a){var b=Ext.create("Ext.ux.grid.menu.ListMenu",a);b.on("checkchange",this.onCheckChange,this);return b},getValue:function(){return this.menu.getSelected()},setValue:function(a){this.menu.setSelected(a);this.fireEvent("update",this)},isActivatable:function(){return this.getValue().length>0},getSerialArgs:function(){return{type:"list",value:this.phpMode?this.getValue().join(","):this.getValue()}},onCheckChange:function(){this.dt.delay(this.updateBuffer)},validateRecord:function(a){var b=this.getValue();return Ext.Array.indexOf(b,a.get(this.dataIndex))>-1}});Ext.define("Ext.ux.grid.filter.NumericFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.numeric",uses:["Ext.form.field.Number"],createMenu:function(a){var b=this,c;c=Ext.create("Ext.ux.grid.menu.RangeMenu",a);c.on("update",b.fireUpdate,b);return c},getValue:function(){return this.menu.getValue()},setValue:function(a){this.menu.setValue(a)},isActivatable:function(){var a=this.getValue(),b;for(b in a){if(a[b]!==undefined){return true}}return false},getSerialArgs:function(){var c,b=[],a=this.menu.getValue();for(c in a){b.push({type:"numeric",comparison:c,value:a[c]})}return b},validateRecord:function(a){var d=a.get(this.dataIndex),b=this.getValue(),c=Ext.isNumber;if(c(b.eq)&&d!=b.eq){return false}if(c(b.lt)&&d>=b.lt){return false}if(c(b.gt)&&d<=b.gt){return false}return true}});Ext.define("Ext.ux.grid.filter.StringFilter",{extend:"Ext.ux.grid.filter.Filter",alias:"gridfilter.string",iconCls:"ux-gridfilter-text-icon",emptyText:"Enter Filter Text...",selectOnFocus:true,width:125,init:function(a){Ext.applyIf(a,{enableKeyEvents:true,iconCls:this.iconCls,hideLabel:true,listeners:{scope:this,keyup:this.onInputKeyUp,el:{click:function(b){b.stopPropagation()}}}});this.inputItem=Ext.create("Ext.form.field.Text",a);this.menu.add(this.inputItem);this.updateTask=Ext.create("Ext.util.DelayedTask",this.fireUpdate,this)},getValue:function(){return this.inputItem.getValue()},setValue:function(a){this.inputItem.setValue(a);this.fireEvent("update",this)},isActivatable:function(){return this.inputItem.getValue().length>0},getSerialArgs:function(){return{type:"string",value:this.getValue()}},validateRecord:function(a){var b=a.get(this.dataIndex);if(typeof b!="string"){return(this.getValue().length===0)}return b.toLowerCase().indexOf(this.getValue().toLowerCase())>-1},onInputKeyUp:function(c,b){var a=b.getKey();if(a==b.RETURN&&c.isValid()){b.stopEvent();this.menu.hide();return}this.updateTask.delay(this.updateBuffer)}});Ext.define("Ext.ux.grid.FiltersFeature",{extend:"Ext.grid.feature.Feature",alias:"feature.filters",uses:["Ext.ux.grid.menu.ListMenu","Ext.ux.grid.menu.RangeMenu","Ext.ux.grid.filter.BooleanFilter","Ext.ux.grid.filter.DateFilter","Ext.ux.grid.filter.ListFilter","Ext.ux.grid.filter.NumericFilter","Ext.ux.grid.filter.StringFilter"],autoReload:true,filterCls:"ux-filtered-column",local:false,menuFilterText:"Filters",paramPrefix:"filter",showMenu:true,stateId:undefined,updateBuffer:500,hasFeatureEvent:false,constructor:function(a){var b=this;a=a||{};Ext.apply(b,a);b.deferredUpdate=Ext.create("Ext.util.DelayedTask",b.reload,b);b.filters=b.createFiltersCollection();b.filterConfigs=a.filters},attachEvents:function(){var c=this,a=c.view,d=a.headerCt,b=c.getGridPanel();c.bindStore(a.getStore(),true);d.on("menucreate",c.onMenuCreate,c);a.on("refresh",c.onRefresh,c);b.on({scope:c,beforestaterestore:c.applyState,beforestatesave:c.saveState,beforedestroy:c.destroy});b.filters=c;b.addEvents("filterupdate")},createFiltersCollection:function(){return Ext.create("Ext.util.MixedCollection",false,function(a){return a?a.dataIndex:null})},createFilters:function(){var h=this,g=h.filters.getCount(),a=h.getGridPanel(),d=h.createFiltersCollection(),e=a.store.model,f=e.prototype.fields,i,c,b;if(g){b={};h.saveState(null,b)}function j(l,k,m){if(l&&(m||k)){i=f.get(l);c={dataIndex:l,type:(i&&i.type&&i.type.type)||"auto"};if(Ext.isObject(k)){Ext.apply(c,k)}d.replace(c)}}Ext.Array.each(h.filterConfigs,function(k){j(k.dataIndex,k)});Ext.Array.each(a.columns,function(k){if(k.filterable===false){d.removeAtKey(k.dataIndex)}else{j(k.dataIndex,k.filter,k.filterable)}});h.removeAll();if(d.items){h.initializeFilters(d.items)}if(g){h.applyState(null,b)}},initializeFilters:function(e){var d=this,f=e.length,b,c,a;for(b=0;b<f;b++){c=e[b];if(c){a=d.getFilterClass(c.type);c=c.menu?c:new a(c);d.filters.add(c);Ext.util.Observable.capture(c,this.onStateChange,this)}}},onMenuCreate:function(c,b){var a=this;a.createFilters();b.on("beforeshow",a.onMenuBeforeShow,a)},onMenuBeforeShow:function(d){var c=this,b,a;if(c.showMenu){b=c.menuItem;if(!b||b.isDestroyed){c.createMenuItem(d);b=c.menuItem}a=c.getMenuFilter();if(a){b.setMenu(a.menu,false);b.setChecked(a.active);b.setDisabled(a.disabled===true)}b.setVisible(!!a);this.sep.setVisible(!!a)}},createMenuItem:function(b){var a=this;a.sep=b.add("-");a.menuItem=b.add({checked:false,itemId:"filters",text:a.menuFilterText,listeners:{scope:a,checkchange:a.onCheckChange,beforecheckchange:a.onBeforeCheck}})},getGridPanel:function(){return this.view.up("gridpanel")},applyState:function(b,e){var d=this,a,c;d.applyingState=true;d.clearFilters();if(e.filters){for(a in e.filters){if(e.filters.hasOwnProperty(a)){c=d.filters.get(a);if(c){c.setValue(e.filters[a]);c.setActive(true)}}}}d.deferredUpdate.cancel();if(d.local){d.reload()}delete d.applyingState;delete e.filters},saveState:function(a,c){var b={};this.filters.each(function(d){if(d.active){b[d.dataIndex]=d.getValue()}});return(c.filters=b)},destroy:function(){var a=this;Ext.destroyMembers(a,"menuItem","sep");a.removeAll();a.clearListeners()},removeAll:function(){if(this.filters){Ext.destroy.apply(Ext,this.filters.items);this.filters.clear()}},bindStore:function(a){var b=this;if(b.store&&b.storeListeners){b.store.un(b.storeListeners)}if(a){b.storeListeners={scope:b};if(b.local){b.storeListeners.load=b.onLoad}else{b.storeListeners["before"+(a.buffered?"prefetch":"load")]=b.onBeforeLoad}a.on(b.storeListeners)}else{delete b.storeListeners}b.store=a},getMenuFilter:function(){var a=this.view.headerCt.getMenu().activeHeader;return a?this.filters.get(a.dataIndex):null},onCheckChange:function(a,b){this.getMenuFilter().setActive(b)},onBeforeCheck:function(a,b){return !b||this.getMenuFilter().isActivatable()},onStateChange:function(d,b){if(d!=="serialize"){var c=this,a=c.getGridPanel();if(b==c.getMenuFilter()){c.menuItem.setChecked(b.active,false)}if((c.autoReload||c.local)&&!c.applyingState){c.deferredUpdate.delay(c.updateBuffer)}c.updateColumnHeadings();if(!c.applyingState){a.saveState()}a.fireEvent("filterupdate",c,b)}},onBeforeLoad:function(a,b){b.params=b.params||{};this.cleanParams(b.params);var c=this.buildQuery(this.getFilterData());Ext.apply(b.params,c)},onLoad:function(a){a.filterBy(this.getRecordFilter())},onRefresh:function(){this.updateColumnHeadings()},updateColumnHeadings:function(){var a=this,b=a.view.headerCt;if(b){b.items.each(function(d){var c=a.getFilter(d.dataIndex);d[c&&c.active?"addCls":"removeCls"](a.filterCls)})}},reload:function(){var b=this,a=b.view.getStore();if(b.local){a.clearFilter(true);a.filterBy(b.getRecordFilter());a.sort()}else{b.deferredUpdate.cancel();if(a.buffered){a.pageMap.clear()}a.loadPage(1)}},getRecordFilter:function(){var c=[],a,b;this.filters.each(function(d){if(d.active){c.push(d)}});a=c.length;return function(d){for(b=0;b<a;b++){if(!c[b].validateRecord(d)){return false}}return true}},addFilter:function(a){var f=this,c=f.getGridPanel().columns,b,h,e,g,d;for(b=0,h=c.length;b<h;b++){e=c[b];if(e.dataIndex===a.dataIndex){e.filter=a}}if(f.view.headerCt.menu){f.createFilters()}else{f.view.headerCt.getMenu()}for(b=0,g=f.filters.items.length;b<g;b++){d=f.filters.items[b];if(d.dataIndex===a.dataIndex){return d}}},addFilters:function(c){if(c){var b=this,a,d;for(a=0,d=c.length;a<d;a++){b.addFilter(c[a])}}},getFilter:function(a){return this.filters.get(a)},clearFilters:function(){this.filters.each(function(a){a.setActive(false)})},getFilterData:function(){var c=[],b,a;this.filters.each(function(e){if(e.active){var g=[].concat(e.serialize());for(b=0,a=g.length;b<a;b++){c.push({field:e.dataIndex,data:g[b]})}}});return c},buildQuery:function(b){var a={},c,h,j,e,k,d,g=b.length;if(!this.encode){for(c=0;c<g;c++){h=b[c];j=[this.paramPrefix,"[",c,"]"].join("");a[j+"[field]"]=h.field;e=j+"[data]";for(k in h.data){a[[e,"[",k,"]"].join("")]=h.data[k]}}}else{d=[];for(c=0;c<g;c++){h=b[c];d.push(Ext.apply({},{field:h.field},h.data))}if(d.length>0){a[this.paramPrefix]=Ext.JSON.encode(d)}}return a},cleanParams:function(c){if(this.encode){delete c[this.paramPrefix]}else{var b,a;b=new RegExp("^"+this.paramPrefix+"[[0-9]+]");for(a in c){if(b.test(a)){delete c[a]}}}},getFilterClass:function(a){switch(a){case"auto":a="string";break;case"int":case"float":a="numeric";break;case"bool":a="boolean";break}return Ext.ClassManager.getByAlias("gridfilter."+a)}});Ext.define("Imits.widget.grid.RansackFiltersFeature",{extend:"Ext.ux.grid.FiltersFeature",alias:"feature.ransack_filters",encode:false,buildQuerySingle:function(b){var c={};switch(b.data.type){case"numeric":if(b.data.comparison!="eq"){c["q["+b.field+"_"+b.data.comparison+"]"]=b.data.value}else{c["q["+b.field+"_in][]"]=b.data.value}break;case"string":if(b.field=="id"){c["q["+b.field+"_in][]"]=b.data.value.split(",")}else{c["q["+b.field+"_ci_in][]"]=b.data.value}break;case"list":c["q["+b.field+"_ci_in][]"]=b.data.value;break;case"boolean":c["q["+b.field+"_eq]"]=b.data.value;break;case"date":var a=b.data.value.split("/");c["q["+b.field+"_"+b.data.comparison+"]"]=[a[2]+"-"+a[0]+"-"+a[1]];break}return c},buildQuery:function(b){var c={};var a=this;Ext.each(b,function(e){var f=a.buildQuerySingle(e);for(var d in f){c[d]=f[d]}});return c},cleanParams:function(c){var b,a;b=new RegExp("^q\\[\\w+_ci_in\\]$");for(a in c){if(b.test(a)){delete c[a]}}}});Ext.define("Imits.widget.SimpleCombo",{extend:"Ext.form.field.ComboBox",alias:"widget.simplecombo",typeAhead:false,triggerAction:"all",forceSelection:true,editable:false,constructor:function(a){if(a.storeOptionsAreSpecial==true){var b=function(c){if(Ext.isEmpty(c)){return[c,window.NO_BREAK_SPACE]}else{return[c,Ext.String.htmlEncode(c)]}};a.store=Ext.Array.map(a.store,b)}this.callParent([a])},initComponent:function(){this.callParent();if(this.storeOptionsAreSpecial==true){this.displayTpl=Ext.create("Ext.XTemplate",'<tpl for=".">{[typeof values === "string" ? values : values["'+this.valueField+'"]]}<tpl if="xindex < xcount">'+this.delimiter+"</tpl></tpl>")}}});Ext.define("Ext.ux.RowExpander",{extend:"Ext.AbstractPlugin",requires:["Ext.grid.feature.RowBody","Ext.grid.feature.RowWrap"],alias:"plugin.rowexpander",rowBodyTpl:null,expandOnEnter:true,expandOnDblClick:true,selectRowOnExpand:false,rowBodyTrSelector:".x-grid-rowbody-tr",rowBodyHiddenCls:"x-grid-row-body-hidden",rowCollapsedCls:"x-grid-row-collapsed",renderer:function(d,b,a,c,e){if(e===0){b.tdCls="x-grid-td-expander"}return'<div class="x-grid-row-expander">&#160;</div>'},constructor:function(){this.callParent(arguments);var b=this.getCmp();this.recordsExpanded={};if(!this.rowBodyTpl){Ext.Error.raise("The 'rowBodyTpl' config is required and is not defined.")}var a=Ext.create("Ext.XTemplate",this.rowBodyTpl),c=[{ftype:"rowbody",columnId:this.getHeaderId(),recordsExpanded:this.recordsExpanded,rowBodyHiddenCls:this.rowBodyHiddenCls,rowCollapsedCls:this.rowCollapsedCls,getAdditionalData:this.getRowBodyFeatureData,getRowBodyContents:function(d){return a.applyTemplate(d)}},{ftype:"rowwrap"}];if(b.features){b.features=c.concat(b.features)}else{b.features=c}},init:function(a){this.callParent(arguments);this.grid=a;this.addExpander();a.on("render",this.bindView,this,{single:true});a.on("reconfigure",this.onReconfigure,this)},onReconfigure:function(){this.addExpander()},addExpander:function(){this.grid.headerCt.insert(0,this.getHeaderConfig())},getHeaderId:function(){if(!this.headerId){this.headerId=Ext.id()}return this.headerId},getRowBodyFeatureData:function(c,a,b,f){var d=Ext.grid.feature.RowBody.prototype.getAdditionalData.apply(this,arguments),e=this.columnId;d.rowBodyColspan=d.rowBodyColspan-1;d.rowBody=this.getRowBodyContents(c);d.rowCls=this.recordsExpanded[b.internalId]?"":this.rowCollapsedCls;d.rowBodyCls=this.recordsExpanded[b.internalId]?"":this.rowBodyHiddenCls;d[e+"-tdAttr"]=' valign="top" rowspan="2" ';if(f[e+"-tdAttr"]){d[e+"-tdAttr"]+=f[e+"-tdAttr"]}return d},bindView:function(){var a=this.getCmp().getView(),b;if(!a.rendered){a.on("render",this.bindView,this,{single:true})}else{b=a.getEl();if(this.expandOnEnter){this.keyNav=Ext.create("Ext.KeyNav",b,{enter:this.onEnter,scope:this})}if(this.expandOnDblClick){a.on("itemdblclick",this.onDblClick,this)}this.view=a}},onEnter:function(h){var b=this.view,g=b.store,j=b.getSelectionModel(),a=j.getSelection(),f=a.length,c=0,d;for(;c<f;c++){d=g.indexOf(a[c]);this.toggleRow(d)}},toggleRow:function(f){var b=this.view,e=b.getNode(f),g=Ext.get(e),c=Ext.get(g).down(this.rowBodyTrSelector),a=b.getRecord(e),d=this.getCmp();if(g.hasCls(this.rowCollapsedCls)){g.removeCls(this.rowCollapsedCls);c.removeCls(this.rowBodyHiddenCls);this.recordsExpanded[a.internalId]=true;b.refreshSize();b.fireEvent("expandbody",e,a,c.dom)}else{g.addCls(this.rowCollapsedCls);c.addCls(this.rowBodyHiddenCls);this.recordsExpanded[a.internalId]=false;b.refreshSize();b.fireEvent("collapsebody",e,a,c.dom)}},onDblClick:function(b,a,d,c,f){this.toggleRow(d)},getHeaderConfig:function(){var c=this,b=Ext.Function.bind(c.toggleRow,c),a=c.selectRowOnExpand;return{id:this.getHeaderId(),width:24,sortable:false,resizable:false,draggable:false,hideable:false,menuDisabled:true,cls:Ext.baseCSSPrefix+"grid-header-special",renderer:function(e,d){d.tdCls=Ext.baseCSSPrefix+"grid-cell-special";return'<div class="'+Ext.baseCSSPrefix+'grid-row-expander">&#160;</div>'},processEvent:function(i,f,d,g,h,j){if(i=="mousedown"&&j.getTarget(".x-grid-row-expander")){var k=j.getTarget(".x-grid-row");b(k);return a}}}}});function splitResultString(a){var c=[];var b=/^\[(.+)\:(.+)\:(\d+)\]$/;Ext.Array.each(a.split("<br/>"),function(d){var e=b.exec(d);c.push({consortium:e[1],production_centre:e[2],count:e[3]})});return c}function printMiPlanString(a){var b="["+a.consortium;if(!Ext.isEmpty(a.production_centre)){b=b+":"+a.production_centre}if(!Ext.isEmpty(a.status_name)){b=b+":"+a.status_name}b=b+"]";return b}Ext.define("Imits.widget.GeneGridCommon",{extend:"Imits.widget.Grid",requires:["Imits.model.Gene","Imits.widget.grid.RansackFiltersFeature","Imits.widget.SimpleCombo","Ext.ux.RowExpander","Ext.selection.CheckboxModel"],title:"&nbsp;",iconCls:"icon-grid",columnLines:true,store:{model:"Imits.model.Gene",autoLoad:true,remoteSort:true,remoteFilter:true,pageSize:20},selModel:Ext.create("Ext.selection.CheckboxModel"),features:[{ftype:"ransack_filters",local:false}],initComponent:function(){var a=this;Ext.apply(this,{columns:a.geneColumns,});a.callParent();a.addDocked(Ext.create("Ext.toolbar.Paging",{store:a.getStore(),dock:"bottom",displayInfo:true}))},addColumn:function(b,a){this.geneColumns.splice(a,0,b)},geneColumns:[{header:"View In IMPC",dataIndex:"marker_symbol",readOnly:true,renderer:function(c,b,a){var d=a.get("mgi_accession_id");if(d!=""){return Ext.String.format('<a href="https://www.mousephenotype.org/data/genes/{0}">{1}</a>',d,c)}else{return Ext.String.format("{0}",c)}}},{header:"# IKMC Projects",dataIndex:"ikmc_projects_count",readOnly:true},{header:"# Clones",dataIndex:"pretty_print_types_of_cells_available",readOnly:true,sortable:false}]});Ext.define("Imits.widget.SimpleCheckbox",{extend:"Ext.form.field.Checkbox",alias:"widget.simplecheckbox",editor:{xtype:"checkbox",cls:"x-grid-checkheader-editor"},renderer:function(b){var a="x-grid-checkheader";if(b===true){a+=" x-grid-checkheader-checked"}return'<div class="'+a+'"></div>'},filter:{type:"boolean",defaultValue:null}});Ext.define("Imits.widget.GeneGrid",{extend:"Imits.widget.GeneGridCommon",requires:["Imits.model.Gene","Imits.widget.grid.RansackFiltersFeature","Imits.widget.SimpleCombo","Ext.ux.RowExpander","Imits.widget.SimpleCheckbox"],selModel:Ext.create("Ext.selection.CheckboxModel"),features:[{ftype:"ransack_filters",local:false}],additionalColumns:[{position:4,data:{header:"Non-Assigned Plans",dataIndex:"non_assigned_mi_plans",readOnly:true,sortable:false,width:250,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="non_assigned_mi_plans">','<a href="'+window.basePath+'/mi_plans/{[values["id"]]}">{[this.prettyPrintMiPlan(values)]}</a></br>',"</tpl>",{prettyPrintMiPlan:printMiPlanString})}},{position:5,data:{header:"Assigned Plans",dataIndex:"assigned_mi_plans",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="assigned_mi_plans">','<a href="'+window.basePath+'/mi_plans/{[values["id"]]}">{[this.prettyPrintMiPlan(values)]}</a></br>',"</tpl>",{prettyPrintMiPlan:printMiPlanString})}},{position:6,data:{header:"Aborted MIs",dataIndex:"pretty_print_aborted_mi_attempts",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedMIs(pretty_print_aborted_mi_attempts)">','<a href="'+window.basePath+'/mi_attempts?q[terms]={parent.marker_symbol}&q[production_centre_name]={production_centre}" target="_blank">[{consortium}:{production_centre}:{count}]</a></br>',"</tpl>",{processedMIs:splitResultString})}},{position:7,data:{header:"MIs in Progress",dataIndex:"pretty_print_mi_attempts_in_progress",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedMIs(pretty_print_mi_attempts_in_progress)">','<a href="'+window.basePath+'/mi_attempts?q[terms]={parent.marker_symbol}&q[production_centre_name]={production_centre}" target="_blank">[{consortium}:{production_centre}:{count}]</a></br>',"</tpl>",{processedMIs:splitResultString})}},{position:8,data:{header:"Genotype Confirmed MIs",dataIndex:"pretty_print_mi_attempts_genotype_confirmed",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedMIs(pretty_print_mi_attempts_genotype_confirmed)">','<a href="'+window.basePath+'/mi_attempts?q[terms]={parent.marker_symbol}&q[production_centre_name]={production_centre}" target="_blank">[{consortium}:{production_centre}:{count}]</a></br>',"</tpl>",{processedMIs:splitResultString})}},{position:9,data:{header:"Phenotype Attempts",dataIndex:"pretty_print_phenotype_attempts",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedMIs(pretty_print_phenotype_attempts)">','<a href="'+window.basePath+'/open/phenotype_attempts?q[terms]={parent.marker_symbol}&q[production_centre_name]={production_centre}" target="_blank">[{consortium}:{production_centre}:{count}]</a></br>',"</tpl>",{processedMIs:splitResultString})}},{position:1,data:{header:"Tree",readOnly:true,renderer:function(e,b,a){var c=a.get("mgi_accession_id");var d='<img src="'+window.basePath+'/images/icons/application_side_tree.png" alt="Blah"/>';return Ext.String.format('<a href="{0}/genes/{1}/relationship_tree">{2}</a>',window.basePath,c,d)},width:40,sortable:false}},{position:1,data:{header:"Production History",dataIndex:"production_history_link",renderer:function(d,b,a){var c=a.getId();return Ext.String.format('<a href="{0}/genes/{1}/network_graph">Production Graph</a>',window.basePath,c)},sortable:false}}],createComboBox:function(f,d,a,b,c,e){if(c){b=Ext.Array.merge([null],b)}return Ext.create("Imits.widget.SimpleCombo",{id:f+"Combobox",store:b,fieldLabel:d,labelAlign:"right",labelWidth:a,storeOptionsAreSpecial:true,hidden:e})},createCheckBox:function(d,b,a,c){return Ext.create("Imits.widget.SimpleCheckbox",{id:d+"Checkbox",fieldLabel:b,labelAlign:"right",labelWidth:a,hidden:c})},registerInterestHandler:function(){var a=this;var j=0;var c=a.getSelectionModel().selected;var q=[];var g=a.consortiumCombo.getSubmitValue();var i=a.centreCombo.getSubmitValue();var p=a.subprojectCombo.getSubmitValue();var d=a.phenotypeonlyCheck.getSubmitValue()||false;var f=a.priorityCombo.getSubmitValue();var o=a.isbespokealleleCheck.getSubmitValue()||false;var m=a.isconditionalalleleCheck.getSubmitValue()||false;var e=a.isdeletionalleleCheck.getSubmitValue()||false;var b=a.iscreknockinalleleCheck.getSubmitValue()||false;var h=a.iscrebacalleleCheck.getSubmitValue()||false;var l=a.conditionaltm1cCheck.getSubmitValue()||false;var k=a.pointmutationCheck.getSubmitValue()||false;var n=a.conditionalpointmutationCheck.getSubmitValue()||false;if(c.length==0){alert("You must select some genes to register interest in");return}if(g==null){alert("You must select a consortium");return}if(f==null){alert("You must selct a priority");return}a.setLoading(true);c.each(function(s){var t=s.raw.marker_symbol;var r=Ext.create("Imits.model.MiPlan",{marker_symbol:t,consortium_name:g,production_centre_name:i,sub_project_name:p,phenotype_only:d,priority_name:f,is_bespoke_allele:o,is_conditional_allele:m,is_deletion_allele:e,is_cre_knock_in_allele:b,is_cre_bac_allele:h,conditional_tm1c:l,point_mutation:k,conditional_point_mutation:n});r.save({failure:function(){q.push(t)},callback:function(){j++;if(j==c.length){if(!Ext.isEmpty(q)){alert("An error occured trying to register interest on the following genes: "+q.join(", ")+". Please try again.")}a.reloadStore();a.setLoading(false)}}})})},initComponent:function(){var b=this;Ext.Array.each(b.additionalColumns,function(c){b.addColumn(c.data,c.position)});b.callParent();var a=true;if(window.CAN_SEE_SUB_PROJECT){a=false}b.consortiumCombo=b.createComboBox("consortium","Consortium",65,window.CONSORTIUM_OPTIONS,false,false);b.centreCombo=b.createComboBox("production_centre","Production Centre",100,window.CENTRE_OPTIONS,true,false);b.subprojectCombo=b.createComboBox("sub_project","Sub Project",65,window.SUB_PROJECT_OPTIONS,false,a);b.priorityCombo=b.createComboBox("priority","Priority",47,window.PRIORITY_OPTIONS,false,false);b.phenotypeonlyCheck=b.createCheckBox("phenotype_only","Phenotype Only",95,false);b.isbespokealleleCheck=b.createCheckBox("is_bespoke_allele","Bespoke",52,false);b.isconditionalalleleCheck=b.createCheckBox("is_conditional_allele","Knockout First Tm1a",120,false);b.isdeletionalleleCheck=b.createCheckBox("is_deletion_allele","Deletion",57,false);b.iscreknockinalleleCheck=b.createCheckBox("is_cre_knock_in_allele","Cre Knock In",80,false);b.iscrebacalleleCheck=b.createCheckBox("is_cre_bac_allele","Cre Bac",55,false);b.conditionaltm1cCheck=b.createCheckBox("conditional_tm1c","Conditional tm1c",100,false);b.pointmutationCheck=b.createCheckBox("point_mutation","Point Mutation",80,false);b.conditionalpointmutationCheck=b.createCheckBox("conditional_point_mutation","Conditional Point Mutation",135,false);b.addDocked(Ext.create("Ext.toolbar.Toolbar",{dock:"top",items:[b.consortiumCombo,b.centreCombo,b.subprojectCombo,b.priorityCombo,b.phenotypeonlyCheck]}));b.addDocked(Ext.create("Ext.toolbar.Toolbar",{dock:"top",items:[b.isbespokealleleCheck,b.isconditionalalleleCheck,b.conditionaltm1cCheck,b.isdeletionalleleCheck,b.iscreknockinalleleCheck,b.iscrebacalleleCheck,b.pointmutationCheck,b.conditionalpointmutationCheck,"","",{id:"register_interest_button",text:"Register Interest",cls:"x-btn-text-icon",iconCls:"icon-add",grid:b,handler:function(){b.registerInterestHandler()}}]}))}});Ext.define("Imits.widget.SimpleNumberField",{extend:"Ext.form.field.Number",alias:"widget.simplenumberfield",minValue:0,hideTrigger:true,keyNavEnabled:false,mouseWheelEnabled:false,allowDecimals:false});Ext.define("Imits.widget.QCCombo",{extend:"Imits.widget.SimpleCombo",alias:"widget.qccombo",store:window.MI_ATTEMPT_QC_OPTIONS});Ext.define("Imits.widget.grid.BoolGridColumn",{extend:"Ext.grid.Column",alias:"widget.boolgridcolumn",editor:{xtype:"checkbox",cls:"x-grid-checkheader-editor"},renderer:function(b){var a="x-grid-checkheader";if(b===true){a+=" x-grid-checkheader-checked"}return'<div class="'+a+'"></div>'},filter:{type:"boolean",defaultValue:null}});Ext.define("Imits.widget.grid.MiAttemptRansackFiltersFeature",{extend:"Imits.widget.grid.RansackFiltersFeature",alias:"feature.mi_attempt_ransack_filters",encode:false,buildQuery:function(b){var c=this.callParent([b]);var a=window.MI_ATTEMPT_SEARCH_PARAMS.terms;if(!Ext.isEmpty(a)){a=a.split("\n");c["q[es_cell_marker_symbol_or_es_cell_name_or_colony_name_ci_in][]"]=a}return c}});Ext.define("Imits.widget.grid.SimpleDateColumn",{extend:"Ext.grid.column.Date",alias:"widget.simpledatecolumn",format:"d-m-Y",editor:{xtype:"datefield",format:"d-m-Y"},filter:{type:"date"}});function splitString(a){var b=[];Ext.Array.each(a.split(", "),function(c){b.push({distributionCentre:c})});return b}Ext.define("Imits.widget.MiGridCommon",{extend:"Imits.widget.Grid",requires:["Imits.model.MiAttempt","Imits.widget.SimpleNumberField","Imits.widget.SimpleCombo","Imits.widget.QCCombo","Imits.widget.grid.BoolGridColumn","Imits.widget.grid.MiAttemptRansackFiltersFeature","Imits.widget.grid.SimpleDateColumn","Imits.Util"],title:"Micro-Injection Attempts",store:{model:"Imits.model.MiAttempt",autoLoad:true,autoSync:true,remoteSort:true,pageSize:20},selType:"rowmodel",features:[{ftype:"mi_attempt_ransack_filters",local:false}],addColumnsToGroupedColumns:function(c,a,b){this.groupedColumns[c].splice(a,0,b)},generateColumns:function(a){var b=[];Ext.Object.each(this.groupedColumns,function(d,c){Ext.Array.each(c,function(e){var f;Ext.each(b,function(g){if(g.dataIndex==e.dataIndex&&g.header==e.header){f=g}});if(!f){e.tdCls="column-"+e.dataIndex;b.push(e)}})});a.columns=b},generateViews:function(){var a={};var d=Ext.pluck(this.groupedColumns.common,"dataIndex");var c=Ext.Array.merge(d,[]);Ext.Object.each(this.groupedColumns,function(g,e){if(g==="common"||g==="none"){return}var f=Ext.pluck(e,"dataIndex");a[g]=Ext.Array.merge(d,f);c=Ext.Array.merge(c,f)});a.Everything=c;var b=this;Ext.Object.each(this.additionalViewColumns,function(e){a[e]=Ext.Array.merge(d,b.additionalViewColumns[e])});this.views=a},constructor:function(a){if(a==undefined){a={}}this.generateColumns(a);this.generateViews();this.callParent([a])},switchViewButtonConfig:function(c,b){var a=this;return{text:c,enableToggle:true,allowDepress:false,toggleGroup:"mi_grid_view_config",minWidth:100,pressed:(b===true),listeners:{toggle:function(e,g){if(!g){return}function f(){var h=a.views[c];Ext.each(a.columns,function(i){if(Ext.Array.indexOf(h,i.dataIndex)==-1){i.setVisible(false)}else{i.setVisible(true)}});d.hide();Ext.getBody().removeCls("wait")}var d=new Ext.LoadMask(a.getEl(),{msg:"Please wait&hellip;",removeMask:true});Ext.getBody().addCls("wait");d.show();setTimeout(f,100)}}}},initComponent:function(){var a=this;a.callParent();a.addDocked(Ext.create("Ext.toolbar.Paging",{store:a.getStore(),dock:"bottom",displayInfo:true}));a.addDocked(Ext.create("Ext.container.ButtonGroup",{layout:"hbox",dock:"top",items:[a.switchViewButtonConfig("Everything",true),a.switchViewButtonConfig("Transfer Details"),a.switchViewButtonConfig("Litter Details"),a.switchViewButtonConfig("Chimera Mating Details"),a.switchViewButtonConfig("QC Details"),a.switchViewButtonConfig("Summary")]}));a.addListener("afterrender",function(){a.filters.createFilters()})},groupedColumns:{none:[{dataIndex:"id",header:"ID",readOnly:true,hidden:(Imits.Util.extractValueIfExistent(window.MI_ATTEMPT_SEARCH_PARAMS,"mi_attempt_id")?false:true),filter:{type:"string",value:Imits.Util.extractValueIfExistent(window.MI_ATTEMPT_SEARCH_PARAMS,"mi_attempt_id")}}],common:[{header:"Active Phenotype",dataIndex:"phenotype_attempts_count",readOnly:true,sortable:false,width:115,renderer:function(f,c,b){var d=b.getId();var e=b.get("phenotype_attempts_count");var a=b.get("es_cell_marker_symbol");if(e!=0){return Ext.String.format('<a href="{0}/phenotype_attempts?q[terms]={1}&q[production_centre_name]={2}"></a>',window.basePath,a,e)}else{return Ext.String.format("{0}",e)}}},{dataIndex:"consortium_name",header:"Consortium",readOnly:true,width:115,filter:{type:"list",options:window.MI_ATTEMPT_CONSORTIUM_OPTIONS,value:Imits.Util.extractValueIfExistent(window.MI_ATTEMPT_SEARCH_PARAMS,"consortium_name")},sortable:false},{dataIndex:"production_centre_name",header:"Production Centre",readOnly:true,filter:{type:"list",options:window.MI_ATTEMPT_CENTRE_OPTIONS,value:Imits.Util.extractValueIfExistent(window.MI_ATTEMPT_SEARCH_PARAMS,"production_centre_name")},sortable:false},{dataIndex:"es_cell_name",header:"ES Cell",readOnly:true,sortable:false,filter:{type:"string",value:Imits.Util.extractValueIfExistent(window.MI_ATTEMPT_SEARCH_PARAMS,"es_cell_name")}},{dataIndex:"es_cell_marker_symbol",header:"Marker Symbol",width:85,readOnly:true,sortable:false,filter:{type:"string",value:Imits.Util.extractValueIfExistent(window.MI_ATTEMPT_SEARCH_PARAMS,"es_cell_marker_symbol")}},{dataIndex:"es_cell_allele_symbol",header:"Allele symbol",readOnly:true,sortable:false},{xtype:"simpledatecolumn",dataIndex:"mi_date",header:"MI Date"},{dataIndex:"status_name",header:"Status",width:150,readOnly:true,sortable:false,filter:{type:"list",options:window.MI_ATTEMPT_STATUS_OPTIONS,value:Imits.Util.extractValueIfExistent(window.MI_ATTEMPT_SEARCH_PARAMS,"status_name")}},{dataIndex:"colony_name",header:"Colony Name",editor:"textfield",filter:{type:"string",value:Imits.Util.extractValueIfExistent(window.MI_ATTEMPT_SEARCH_PARAMS,"colony_name")}}],"Transfer Details":[{dataIndex:"blast_strain_name",header:"Blast Strain",sortable:false,renderer:"safeTextRenderer",width:200,editor:{xtype:"simplecombo",store:Ext.Array.merge([""],window.MI_ATTEMPT_STRAIN_OPTIONS),storeOptionsAreSpecial:true,listConfig:{minWidth:200}}},{dataIndex:"total_blasts_injected",header:"Total Blasts Injected",editor:"simplenumberfield"},{dataIndex:"total_transferred",header:"Total Transferred",editor:"simplenumberfield"},{dataIndex:"number_surrogates_receiving",header:"# Surrogates Receiving",editor:"simplenumberfield"}],"Litter Details":[{dataIndex:"total_pups_born",header:"Total Pups Born",editor:"simplenumberfield"},{dataIndex:"total_female_chimeras",header:"Total Female Chimeras",editor:"simplenumberfield"},{dataIndex:"total_male_chimeras",header:"Total Male Chimeras",editor:"simplenumberfield"},{dataIndex:"total_chimeras",header:"Total Chimeras",readOnly:true},{dataIndex:"number_of_males_with_100_percent_chimerism",header:"100% Male Chimerism Levels",editor:"simplenumberfield"},{dataIndex:"number_of_males_with_80_to_99_percent_chimerism",header:"99-80% Male Chimerism Levels",editor:"simplenumberfield"},{dataIndex:"number_of_males_with_40_to_79_percent_chimerism",header:"79-40% Male Chimerism Levels",editor:"simplenumberfield"},{dataIndex:"number_of_males_with_0_to_39_percent_chimerism",header:"39-0% Male Chimerism Levels",editor:"simplenumberfield"}],"Chimera Mating Details":[{dataIndex:"test_cross_strain_name",header:"Test Cross Strain",readOnly:true,sortable:false,renderer:"safeTextRenderer",width:200,editor:{xtype:"simplecombo",store:Ext.Array.merge([""],window.MI_ATTEMPT_STRAIN_OPTIONS),storeOptionsAreSpecial:true,listConfig:{minWidth:200}}},{dataIndex:"colony_background_strain_name",header:"Colony Background Strain",readOnly:true,sortable:false,renderer:"safeTextRenderer",width:200,editor:{xtype:"simplecombo",store:Ext.Array.merge([""],window.MI_ATTEMPT_STRAIN_OPTIONS),storeOptionsAreSpecial:true,listConfig:{minWidth:200}}},{xtype:"simpledatecolumn",dataIndex:"date_chimeras_mated",header:"Date Chimeras Mated"},{dataIndex:"number_of_chimera_matings_attempted",header:"# Chimera Mating Attempted",editor:"simplenumberfield"},{dataIndex:"number_of_chimera_matings_successful",header:"# Chimera Matings Successful",editor:"simplenumberfield"},{dataIndex:"number_of_chimeras_with_glt_from_cct",header:"# Chimeras with Germline Transmission from CCT",editor:"simplenumberfield"},{dataIndex:"number_of_chimeras_with_glt_from_genotyping",header:"No. Chimeras with Germline Transmission from Genotyping",editor:"simplenumberfield"},{dataIndex:"number_of_chimeras_with_0_to_9_percent_glt",header:"# Chimeras with 0-9% GLT",editor:"simplenumberfield"},{dataIndex:"number_of_chimeras_with_10_to_49_percent_glt",header:"# Chimeras with 10-49% GLT",editor:"simplenumberfield"},{dataIndex:"number_of_chimeras_with_50_to_99_percent_glt",header:"No. Chimeras with 50-99% GLT",editor:"simplenumberfield"},{dataIndex:"number_of_chimeras_with_100_percent_glt",header:"No. Chimeras with 100% GLT",editor:"simplenumberfield"},{dataIndex:"total_f1_mice_from_matings",header:"Total F1 Mice from Matings",editor:"simplenumberfield"},{dataIndex:"number_of_cct_offspring",header:"# Coat Colour Transmission Offspring",editor:"simplenumberfield"},{dataIndex:"number_of_het_offspring",header:"# Het Offspring",editor:"simplenumberfield"},{dataIndex:"number_of_live_glt_offspring",header:"# Live GLT Offspring",editor:"simplenumberfield"},{dataIndex:"mouse_allele_type",header:"Mouse Allele Type",editor:{xtype:"simplecombo",store:window.MI_ATTEMPT_MOUSE_ALLELE_TYPE_OPTIONS,listConfig:{minWidth:300}}},{dataIndex:"mouse_allele_symbol",header:"Mouse Allele Symbol",readOnly:true}],"QC Details":[{dataIndex:"qc_southern_blot_result",header:"Southern Blot",sortable:false,editor:"qccombo"},{dataIndex:"qc_five_prime_lr_pcr_result",header:"Five Prime LR PCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_five_prime_cassette_integrity_result",header:"Five Prime Cassette Integrity",sortable:false,editor:"qccombo"},{dataIndex:"qc_tv_backbone_assay_result",header:"TV Backbone Assay",sortable:false,editor:"qccombo"},{dataIndex:"qc_neo_count_qpcr_result",header:"Neo Count QPCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_lacz_count_qpcr_result",header:"Lacz Count QPCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_neo_sr_pcr_result",header:"Neo SR PCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_loa_qpcr_result",header:"LOA QPCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_homozygous_loa_sr_pcr_result",header:"Homozygous LOA SR PCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_lacz_sr_pcr_result",header:"LacZ SR PCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_mutant_specific_sr_pcr_result",header:"Mutant Specific SR PCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_loxp_confirmation_result",header:"LoxP Confirmation",sortable:false,editor:"qccombo"},{dataIndex:"qc_three_prime_lr_pcr_result",header:"Three Prime LR PCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_critical_region_qpcr_result",header:"Critical Region QPCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_loxp_srpcr_result",header:"Loxp SRPCR",sortable:false,editor:"qccombo"},{dataIndex:"qc_loxp_srpcr_and_sequencing_result",header:"Loxp SRPRC and Sequencing",sortable:false,editor:"qccombo"},{dataIndex:"report_to_public",header:"Report to Public",xtype:"boolgridcolumn"},{dataIndex:"is_active",header:"Active?",xtype:"boolgridcolumn"},{dataIndex:"is_released_from_genotyping",header:"Released From Genotyping",xtype:"boolgridcolumn"}]},additionalViewColumns:{Summary:["emma_status","mouse_allele_type","mouse_allele_symbol"]}});Ext.define("Imits.widget.MiGrid",{extend:"Imits.widget.MiGridCommon",plugins:[Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:false,clicksToEdit:1})],additionalColumns:{common:[{position:9,data:{header:"Distribution Centres",dataIndex:"distribution_centres_formatted_display",readOnly:true,sortable:false,width:225,renderer:function(e,b,a){var c=a.getId();var d=a.get("distribution_centres_formatted_display");if(d!=""){return Ext.String.format('<a href="{0}/mi_attempts/{1}#distribution_centres" target="_blank">{2}</a>',window.basePath,c,d)}else{return Ext.String.format("{0}",d)}}}},{position:0,data:{header:"Phenotype",dataIndex:"phenotype_attempt_new_link",renderer:function(e,b,a){var d=a.getId();var c=a.get("status_name");if(c=="Genotype confirmed"){return Ext.String.format('<a href="{0}/mi_attempts/{1}/phenotype_attempts/new">Create</a>',window.basePath,d)}else{return Ext.String.format("",window.basePath,d)}},sortable:false}},{position:0,data:{header:"Edit In Form",dataIndex:"edit_link",renderer:function(d,b,a){var c=a.getId();return Ext.String.format('<a href="{0}/mi_attempts/{1}">Edit in Form</a>',window.basePath,c)},sortable:false}}]},constructor:function(a){grid=this;Ext.Object.each(grid.additionalColumns,function(c,b){Ext.Array.each(b,function(d){grid.addColumnsToGroupedColumns(c,d.position,d.data)})});this.callParent([a])},});Ext.define("Imits.widget.MiPlansGridCommon",{extend:"Imits.widget.Grid",requires:["Imits.model.MiPlan","Imits.widget.grid.RansackFiltersFeature"],title:"Plans",iconCls:"icon-grid",columnLines:true,store:{model:"Imits.model.MiPlan",autoLoad:true,remoteSort:true,remoteFilter:true,pageSize:20},selType:"rowmodel",features:[{ftype:"ransack_filters",local:false}],addColumn:function(b,a){this.miPlanColumns.splice(a,0,b)},initComponent:function(){var a=this;if(window.CAN_SEE_SUB_PROJECT){a.addColumn({dataIndex:"sub_project_name",header:"Sub-Project",readOnly:true,width:120,filter:{type:"list",options:window.SUB_PROJECT_OPTIONS}},5)}Ext.apply(this,{columns:this.miPlanColumns,});a.callParent();a.addDocked(Ext.create("Ext.toolbar.Paging",{store:a.getStore(),dock:"bottom",displayInfo:true}));a.addListener("afterrender",function(){a.filters.createFilters()})},miPlanColumns:[{dataIndex:"id",header:"ID",readOnly:true,hidden:true},{dataIndex:"marker_symbol",header:"Marker Symbol",readOnly:true,filter:{type:"string"}},{dataIndex:"consortium_name",header:"Consortium",readOnly:true,width:100,filter:{type:"list",options:window.CONSORTIUM_OPTIONS}},{dataIndex:"production_centre_name",header:"Production Centre",readOnly:true,width:115,filter:{type:"list",options:window.CENTRE_OPTIONS,value:window.USER_PRODUCTION_CENTRE}},{dataIndex:"status_name",header:"Status",readOnly:true,flex:1,filter:{type:"list",options:window.STATUS_OPTIONS}},{dataIndex:"priority_name",header:"Priority",readOnly:true,width:80,filter:{type:"list",options:window.PRIORITY_OPTIONS}},{dataIndex:"phenotype_only",header:"Phenotype Only",xtype:"boolgridcolumn",width:90,readOnly:true},{dataIndex:"is_conditional_allele",header:"Knockout First tm1a",xtype:"boolgridcolumn",width:110,readOnly:true},{dataIndex:"is_deletion_allele",header:"Deletion",xtype:"boolgridcolumn",width:60,readOnly:true},{dataIndex:"is_cre_knock_in_allele",header:"Cre Knock-in",xtype:"boolgridcolumn",width:80,readOnly:true},{dataIndex:"is_cre_bac_allele",header:"Cre BAC",xtype:"boolgridcolumn",width:60,readOnly:true},{dataIndex:"is_bespoke_allele",header:"Bespoke",xtype:"boolgridcolumn",width:60,readOnly:true,hidden:true},{dataIndex:"conditional_tm1c",header:"Conditional tm1c",xtype:"boolgridcolumn",width:90,readOnly:true},{dataIndex:"point_mutation",header:"Point Mutation",xtype:"boolgridcolumn",width:80,readOnly:true},{dataIndex:"conditional_point_mutation",header:"Conditional Point Mutation",xtype:"boolgridcolumn",width:140,readOnly:true},{dataIndex:"ignore_available_mice",header:"Ignore Available Mice",xtype:"boolgridcolumn",width:120,readOnly:true}]});Ext.define("Imits.widget.MiPlansGrid",{extend:"Imits.widget.MiPlansGridCommon",additionalColumns:[{position:1,data:{header:"Edit In Form",dataIndex:"edit_link",renderer:function(c,b,a){var d=a.getId();return Ext.String.format('<a href="{0}/mi_plans/{1}">Edit in Form</a>',window.basePath,d)},sortable:false}}],initComponent:function(){grid=this;Ext.Array.each(grid.additionalColumns,function(a){grid.addColumn(a.data,a.position)});this.callParent()}});Ext.define("Imits.widget.grid.PhenotypeAttemptRansackFiltersFeature",{extend:"Imits.widget.grid.RansackFiltersFeature",alias:"feature.phenotype_attempt_ransack_filters",encode:false,buildQuery:function(b){var c=this.callParent([b]);var a=window.PHENOTYPE_ATTEMPT_SEARCH_PARAMS.terms;if(!Ext.isEmpty(a)){a=a.split("\n");c["q[marker_symbol_ci_in][]"]=a}return c}});function splitString(a){var b=[];Ext.Array.each(a.split(", "),function(c){b.push({distributionCentre:c})});return b}Ext.define("Imits.widget.PhenotypeAttemptsGridCommon",{extend:"Imits.widget.Grid",requires:["Imits.model.PhenotypeAttempt","Imits.widget.SimpleNumberField","Imits.widget.grid.PhenotypeAttemptRansackFiltersFeature","Imits.widget.grid.BoolGridColumn","Imits.Util"],title:"Phenotype attempts",iconCls:"icon-grid",columnLines:true,store:{model:"Imits.model.PhenotypeAttempt",autoLoad:true,remoteSort:true,remoteFilter:true,pageSize:20},selType:"rowmodel",features:[{ftype:"phenotype_attempt_ransack_filters",local:false}],initComponent:function(){var a=this;Ext.apply(a,{columns:a.phenotypeColumns,});a.callParent();a.addDocked(Ext.create("Ext.toolbar.Paging",{store:a.getStore(),dock:"bottom",displayInfo:true}));a.addListener("afterrender",function(){a.filters.createFilters()})},addColumn:function(b,a){this.phenotypeColumns.splice(a,0,b)},phenotypeColumns:[{dataIndex:"id",header:"ID",readOnly:true,hidden:(Imits.Util.extractValueIfExistent(window.PHENOTYPE_ATTEMPT_SEARCH_PARAMS,"phenotype_attempt_id")?false:true),filter:{type:"string",value:Imits.Util.extractValueIfExistent(window.PHENOTYPE_ATTEMPT_SEARCH_PARAMS,"phenotype_attempt_id")}},{dataIndex:"colony_name",header:"Colony Name",editor:"textfield",filter:{type:"string"}},{dataIndex:"consortium_name",header:"Consortium",readOnly:true,width:115,filter:{type:"list",options:window.CONSORTIUM_OPTIONS,value:Imits.Util.extractValueIfExistent(window.PHENOTYPE_ATTEMPT_SEARCH_PARAMS,"consortium_name")},sortable:false},{dataIndex:"production_centre_name",header:"Production Centre",readOnly:true,width:150,filter:{type:"list",options:window.CENTRE_OPTIONS,value:Imits.Util.extractValueIfExistent(window.PHENOTYPE_ATTEMPT_SEARCH_PARAMS,"production_centre_name")},sortable:false},{dataIndex:"marker_symbol",header:"Marker Symbol",readOnly:true,filter:{type:"string",value:Imits.Util.extractValueIfExistent(window.PHENOTYPE_ATTEMPT_SEARCH_PARAMS,"es_cell_marker_symbol")}},{dataIndex:"is_active",header:"Active?",readOnly:true,width:55,xtype:"boolgridcolumn",filter:{type:"boolean"}},{dataIndex:"status_name",header:"Status",readOnly:true,filter:{type:"list",options:window.PHENOTYPE_STATUS_OPTIONS,value:Imits.Util.extractValueIfExistent(window.PHENOTYPE_ATTEMPT_SEARCH_PARAMS,"status_name")}},{dataIndex:"rederivation_started",header:"Rederivation started",readOnly:true,xtype:"boolgridcolumn",width:115,filter:{type:"boolean"}},{dataIndex:"rederivation_complete",header:"Rederivation complete",readOnly:true,xtype:"boolgridcolumn",width:120,filter:{type:"boolean"}},{dataIndex:"deleter_strain_name",header:"Cre-deleter strain",readOnly:true,filter:{type:"list",options:window.PHENOTYPE_DELETER_STRAIN_OPTIONS}},{dataIndex:"number_of_cre_matings_successful",header:"# Cre Matings successful",readOnly:true,editor:"simplenumberfield",width:140},{dataIndex:"phenotyping_started",header:"Phenotyping Started",readOnly:true,xtype:"boolgridcolumn",width:115,filter:{type:"boolean"}},{dataIndex:"phenotyping_complete",header:"Phenotyping Complete",readOnly:true,xtype:"boolgridcolumn",width:120,filter:{type:"boolean"}}]});Ext.define("Imits.widget.PhenotypeAttemptsGrid",{extend:"Imits.widget.PhenotypeAttemptsGridCommon",additionalColumns:[{position:1,data:{header:"Edit In Form",dataIndex:"edit_link",renderer:function(d,b,a){var c=a.getId();return Ext.String.format('<a href="{0}/phenotype_attempts/{1}">Edit in Form</a>',window.basePath,c)},sortable:false}},{position:5,data:{header:"Distribution Centres",dataIndex:"distribution_centres_formatted_display",readOnly:true,sortable:false,width:225,renderer:function(e,b,a){var d=a.getId();var c=a.get("distribution_centres_formatted_display");if(c!=""){return Ext.String.format('<a href="{0}/phenotype_attempts/{1}#distribution_centres" target="_blank">{2}</a>',window.basePath,d,c)}else{return Ext.String.format("{0}",c)}}}}],initComponent:function(){var a=this;Ext.Array.each(a.additionalColumns,function(b){a.addColumn(b.data,b.position)});a.callParent()}});Ext.define("Imits.widget.CentresGrid",{extend:"Imits.widget.Grid",requires:["Imits.model.Centre","Imits.widget.grid.RansackFiltersFeature","Imits.Util"],title:"Centres",iconCls:"icon-grid",columnLines:true,store:{model:"Imits.model.Centre",autoLoad:true,autoSync:true,remoteSort:true,remoteFilter:true,pageSize:25},selType:"rowmodel",features:[{ftype:"ransack_filters",local:false}],plugins:[Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:false,clicksToEdit:1})],initComponent:function(){var a=this;a.callParent();a.addDocked(Ext.create("Ext.toolbar.Paging",{store:a.getStore(),dock:"bottom",displayInfo:true}))},columns:[{dataIndex:"id",header:"ID",readOnly:true,hidden:true},{dataIndex:"name",header:"ID",width:300,filter:{type:"string"},editor:"textfield"},{dataIndex:"contact_name",header:"Contact Name",width:300,filter:{type:"string"},editor:"textfield"},{dataIndex:"contact_email",header:"Contact Email",width:300,filter:{type:"string"},editor:"textfield"},{xtype:"actioncolumn",width:21,items:[{icon:"../images/icons/delete.png",tooltip:"Delete",handler:function(c,d,b){var a=c.getStore().getAt(d);if(confirm("Remove centre?")){c.getStore().removeAt(d)}}}]}]});Ext.define("Imits.widget.Window",{extend:"Ext.window.Window",plain:true,showLoadMask:function(){this.loadMask=new Ext.LoadMask(this.getComponent(0).getEl());this.loadMask.show()},hideLoadMask:function(){this.loadMask.hide()}});Ext.define("Imits.widget.SolrUpdateQueueItemsGrid",{extend:"Imits.widget.Grid",requires:["Imits.widget.grid.RansackFiltersFeature","Imits.model.SolrUpdateQueueItem","Imits.Util"],title:"Solr Update Queue Items",iconCls:"icon-grid",columnLines:true,store:{model:"Imits.model.SolrUpdateQueueItem",autoLoad:true,remoteSort:true,remoteFilter:true,pageSize:200},features:[{ftype:"ransack_filters",local:false}],initComponent:function(){var a=this;a.callParent();a.addDocked(Ext.create("Ext.toolbar.Paging",{store:a.getStore(),dock:"bottom",displayInfo:true}))},columns:[{dataIndex:"id",header:"ID",readOnly:true,width:60},{dataIndex:"reference",header:"Reference",readOnly:true,flex:1,renderer:function(f,b,a){var d=a.get("reference");if(d.type=="allele"){var e=Ext.String.format("{0}/{1}s/{2}",document.location.pathname.replace(/solr_update\/queue\/items/,"targ_rep"),d.type,d.id)}else{var e=Ext.String.format("{0}/{1}s/{2}",window.basePath,d.type,d.id)}var c=e+"/history";return Ext.String.format('<a href="{0}">{1} / {2}</a> (<a href="{3}">audit history</a>)',e,d.type,d.id,c)}},{dataIndex:"action",header:"Action",readOnly:true,width:60,filter:{type:"list",options:["update","delete"]}},{dataIndex:"created_at",xtype:"datecolumn",format:"d-m-Y H:i:s",header:"Created At",readOnly:true,width:125},{header:"",xtype:"actioncolumn",width:48,items:[{icon:window.basePath+"/images/icons/resultset_next.png",tooltip:"Run now",handler:function(b,e,a){var c=b.getStore().getAt(e);var d=c.get("id");Ext.Msg.confirm("Run item?","Run item "+d+"?",function(f){if(f==="yes"){b.setLoading("Running item "+d);Ext.Ajax.request({method:"POST",params:{authenticity_token:window.authenticityToken},url:window.basePath+"/solr_update/queue/items/"+d+"/run.json",success:function(){b.getStore().remove(c)},failure:function(g){Imits.Util.handleErrorResponse(g)},callback:function(){b.setLoading(false)}})}})}},{icon:window.basePath+"/images/icons/cancel.png",tooltip:"Delete",handler:function(b,d,a){var c=b.getStore().getAt(d);Ext.Msg.confirm("Delete item?","Delete item "+c.get("id")+"?",function(e){if(e==="yes"){b.setLoading("Deleting item "+c.get("id"));c.destroy({success:function(){b.getStore().remove(c)},callback:function(){b.setLoading(false)}})}})}}]},{header:"",width:80,renderer:function(d,b,a){var c=a.get("reference");return Ext.String.format('<a href="{0}/search?q=type:{1}+id:{2}">{3}</a>',window.SOLR_ALLELE_URL,c.type,c.id,"SOLR view")}}]});Ext.define("Imits.widget.GeneRelationshipTree",{extend:"Ext.tree.Panel",requires:["Ext.data.TreeStore","Ext.tree.plugin.TreeViewDragDrop"],mixins:["Imits.widget.ManageResizeWithBrowserFrame"],viewConfig:{plugins:{ptype:"treeviewdragdrop"}},columns:[{xtype:"treecolumn",dataIndex:"name",text:"&nbsp;",flex:1},{text:"ID",dataIndex:"id",hidden:true},{text:"Status",dataIndex:"status",width:200},{text:"Colony name",dataIndex:"colony_name",width:200},{text:"Sub-project",dataIndex:"sub_project_name",width:200}],handleMove:function(f,c,e){var b=this,a=e.data;if(a.type!=="MiPlan"){Ext.MessageBox.alert("Alert",Ext.String.format("Can only drag onto a Plan"))}else{if(a.id===f.data.mi_plan_id){Ext.MessageBox.alert("Alert",Ext.String.format("This {0} already belongs to {1} and {2}",f.data.name,a.consortium_name,a.production_centre_name))}else{var d=Ext.String.format("Updating {0} {1}<br>Old consortium / production centre / plan ID: {2} / {3} / {4}<br>New consortium / production centre / plan ID: {5} / {6} / {7}<br>",f.data.name,f.data.colony_name,f.data.consortium_name,f.data.production_centre_name,f.data.mi_plan_id,a.consortium_name,a.production_centre_name,a.id);Ext.MessageBox.confirm("Note",d,function(h){if(h==="yes"){var g;if(f.data.type==="MiAttempt"){g=Imits.model.MiAttempt}else{if(f.data.type==="PhenotypeAttempt"){g=Imits.model.PhenotypeAttempt}else{throw ("Unknown model")}}g.load(f.data.id,{success:function(i){i.set("mi_plan_id",a.id);i.save({success:function(){b.getStore().reload()}})}})}})}}},initComponent:function(){var a=this;a.callParent();a.addListener("load",function(c,b,d){if(d){a.expandAll()}});a.addListener("beforeitemmove",function(e,c,d,b){if(["MiPlan","Centre","Consortium"].indexOf(d.data.type)!==-1){a.handleMove(e,c,d)}return false})},title:"&nbsp;",store:Ext.create("Ext.data.TreeStore",{fields:[{name:"id",type:"integer"},{name:"mi_plan_id",type:"integer"},{name:"name",type:"string"},{name:"type",type:"string"},{name:"status",type:"string"},{name:"colony_name",type:"string"},{name:"consortium_name",type:"string"},{name:"production_centre_name",type:"string"},{name:"sub_project_name",type:"string"}],proxy:{type:"ajax",url:(function(){if(window.GENE){return window.basePath+"/genes/"+window.GENE.mgi_accession_id+"/relationship_tree.json"}else{return""}}())}}),rootVisible:false,useArrows:true});Ext.define("Imits.widget.ContactsGrid",{extend:"Imits.widget.Grid",requires:["Imits.model.Contact","Imits.widget.grid.RansackFiltersFeature","Imits.Util"],title:"Contacts",iconCls:"icon-grid",columnLines:true,store:{model:"Imits.model.Contact",autoLoad:true,autoSync:true,remoteSort:true,remoteFilter:true,pageSize:20},selType:"rowmodel",features:[{ftype:"ransack_filters",local:false}],plugins:[Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:false,clicksToEdit:1})],initComponent:function(){var a=this;a.callParent();a.addDocked(Ext.create("Ext.toolbar.Paging",{store:a.getStore(),dock:"bottom",displayInfo:true}))},columns:[{dataIndex:"id",header:"ID",readOnly:true,hidden:true},{dataIndex:"email",header:"Email address",width:300,filter:{type:"string"},editor:"textfield"},{xtype:"actioncolumn",width:21,items:[{icon:"../images/icons/delete.png",tooltip:"Delete",handler:function(c,d,b){var a=c.getStore().getAt(d);if(confirm("Remove contact?")){c.getStore().removeAt(d)}}}]}]});Ext.define("Imits.widget.NotificationPane",{extend:"Imits.widget.Window",requires:["Imits.model.Notification"],title:"View Notification",resizable:true,layout:"fit",closeAction:"hide",cls:"notification view",constructor:function(a){return this.callParent([a])},initComponent:function(){var b=this;this.callParent();this.form=Ext.create("Ext.form.Panel",{ui:"plain",margin:"0 0 10 0",width:600,layout:"anchor",defaults:{anchor:"100%",labelWidth:150,labelAlign:"right",labelPad:10},items:[{id:"welcome_email",xtype:"textarea",fieldLabel:"Welcome email",name:"welcome_email",height:230,readOnly:true},{id:"last_email",xtype:"textarea",fieldLabel:"Last email",name:"last_email",height:230,readOnly:true}],buttons:[{text:"Cancel",handler:function(){b.hide()}}]});var a=520;this.add(Ext.create("Ext.panel.Panel",{height:a,ui:"plain",layout:{type:"vbox",align:"stretchmax"},padding:5,items:[b.form]}));this.fields=this.form.items.keys},load:function(b){var a=this;Imits.model.Notification.load(b,{success:function(c){a.notification=c;Ext.each(a.fields,function(d){var e=a.form.getComponent(d);if(e){e.setValue(a.notification.get(d))}});a.show()}})},});Ext.define("Imits.widget.NotificationsGrid",{extend:"Imits.widget.Grid",requires:["Imits.model.Notification","Imits.widget.NotificationPane","Imits.widget.grid.RansackFiltersFeature","Imits.Util"],title:"Notifications",iconCls:"icon-grid",columnLines:true,store:{model:"Imits.model.Notification",autoLoad:true,remoteSort:true,remoteFilter:true,pageSize:20},selType:"rowmodel",features:[{ftype:"ransack_filters",local:false}],createNotification:function(){var b=this;var c=b.emailField.getSubmitValue();var d=b.geneField.getSubmitValue();if(!c||c&&!c.length){alert("You must enter a Email Address.");return}if(!d||d&&!d.length){alert("You must enter a gene marker symbol.");return}b.setLoading(true);var a=Ext.create("Imits.model.Notification",{contact_email:c,gene_marker_symbol:d});a.save({callback:function(){b.reloadStore();b.setLoading(false);b.geneField.setValue();b.emailField.setValue()}})},initComponent:function(){var a=this;a.callParent();a.addDocked(Ext.create("Ext.toolbar.Paging",{store:a.getStore(),dock:"bottom",displayInfo:true}));a.notificationPane=Ext.create("Imits.widget.NotificationPane",{listeners:{hide:{fn:function(){a.setLoading(false)}}}});a.getView().on("cellmousedown",function(d,b,g,c,h,f,e){var i=c.data.id;a.setLoading("Loading notification....");a.notificationPane.load(i)});a.geneField=Ext.create("Ext.form.field.ComboBox",{displayField:"gene_name",store:window.GENE_OPTIONS,fieldLabel:"Gene of interest",labelAlign:"right",labelWidth:100,queryMode:"local",typeAhead:true});a.emailField=Ext.create("Ext.form.field.Text",{fieldLabel:"Email address",name:"email",labelWidth:80,width:250,labelAlign:"right"});a.addDocked(Ext.create("Ext.toolbar.Toolbar",{dock:"top",items:[a.geneField,a.emailField,"  ",{id:"register_interest_button",text:"Register interest",cls:"x-btn-text-icon",iconCls:"icon-add",grid:a,handler:function(){a.createNotification()}}]}))},columns:[{dataIndex:"id",header:"ID",readOnly:true,hidden:true},{dataIndex:"gene_id",header:"Gene ID",hidden:true},{dataIndex:"gene_marker_symbol",header:"Gene",filter:{type:"string"}},{dataIndex:"contact_id",header:"Contact ID",hidden:true},{dataIndex:"contact_email",header:"Contact",width:180,filter:{type:"string"}},{dataIndex:"last_email_sent",xtype:"datecolumn",format:"Y-m-d H:i:s",header:"Last email sent",width:130},{dataIndex:"welcome_email_sent",xtype:"datecolumn",format:"Y-m-d H:i:s",header:"Welcome email sent",width:130},{dataIndex:"updated_at",xtype:"datecolumn",format:"Y-m-d H:i:s",header:"Last updated",hidden:true,width:130},{xtype:"actioncolumn",width:21,items:[{icon:"../images/icons/time_go.png",tooltip:"Resend",handler:function(c,e,b){var a=c.getStore().getAt(e);var d=a.data.id;if(confirm("Are you sure you want to resend this notification?")){Ext.Ajax.request({url:document.location.pathname+"/"+d+"/retry.json",method:"PUT",params:{authenticity_token:window.authenticityToken},success:function(f){var g=f.responseText}})}}}]}]});Ext.define("Imits.widget.ProductionGoalsGrid",{extend:"Imits.widget.Grid",requires:["Imits.model.ProductionGoal","Imits.widget.grid.RansackFiltersFeature","Imits.Util"],title:"Production Goals",iconCls:"icon-grid",columnLines:true,store:{model:"Imits.model.ProductionGoal",autoLoad:true,autoSync:true,remoteSort:true,remoteFilter:true,},selType:"rowmodel",features:[{ftype:"ransack_filters",local:false}],plugins:[Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:false,clicksToEdit:1})],createProductionGoal:function(){var b=this;var e=b.consortiumCombo.getSubmitValue();var g=b.yearText.getSubmitValue();var a=b.monthText.getSubmitValue();var f=b.miText.getSubmitValue();var d=b.gcText.getSubmitValue();if(!e||e&&!e.length){alert("You must enter a valid Consortium.");return}if(!g.length||g.length&&(g<2010||g>2050)){alert("You must enter a valid year.");return}if(a.length&&(a<1||a>12)){alert("You must enter a valid month.");return}if(!f.length||!d){alert("You must enter correct production goal values.");return}b.setLoading(true);var c=Ext.create("Imits.model.ProductionGoal",{consortium_name:e,year:g,month:a,mi_goal:f,gc_goal:d});c.save({callback:function(){b.reloadStore();b.setLoading(false);b.consortiumCombo.setValue();b.yearText.setValue();b.monthText.setValue();b.miText.setValue();b.gcText.setValue()}})},initComponent:function(){var a=this;a.callParent();a.addDocked(Ext.create("Ext.toolbar.Paging",{store:a.getStore(),dock:"bottom",displayInfo:true}));a.consortiumCombo=Ext.create("Imits.widget.SimpleCombo",{id:"consortiumCombobox",store:window.CONSORTIUM_OPTIONS,fieldLabel:"Consortium",labelAlign:"right",labelWidth:65,storeOptionsAreSpecial:true,hidden:false});a.yearText=Ext.create("Ext.form.field.Number",{fieldLabel:"Year",name:"year",labelWidth:50,labelAlign:"right",regex:/[1-9-]*/});a.monthText=Ext.create("Ext.form.field.Number",{fieldLabel:"Month",name:"month",labelWidth:50,labelAlign:"right",regex:/[1-9-]*/});a.miText=Ext.create("Ext.form.field.Number",{fieldLabel:"MI Goal",name:"mi_goal",labelWidth:50,labelAlign:"right",regex:/[1-9-]*/});a.gcText=Ext.create("Ext.form.field.Number",{fieldLabel:"GC Goal",name:"gc_goal",labelWidth:50,labelAlign:"right",regex:/[1-9-]*/});a.addDocked(Ext.create("Ext.toolbar.Toolbar",{dock:"top",items:[a.consortiumCombo,a.yearText,a.monthText,a.miText,a.gcText,"  ",{id:"register_interest_button",text:"Create production goal",cls:"x-btn-text-icon",iconCls:"icon-add",grid:a,handler:function(){a.createProductionGoal()}}]}))},columns:[{dataIndex:"id",header:"ID",readOnly:true,hidden:true},{dataIndex:"consortium_name",header:"Consortium",editor:{xtype:"simplecombo",store:Ext.Array.merge([""],window.CONSORTIUM_OPTIONS),storeOptionsAreSpecial:true,listConfig:{minWidth:200}},filter:{type:"list",options:window.CONSORTIUM_OPTIONS}},{dataIndex:"year",header:"Year",editor:"simplenumberfield"},{dataIndex:"month",header:"Month",editor:"simplenumberfield"},{dataIndex:"mi_goal",header:"MI Goal",editor:"simplenumberfield"},{dataIndex:"gc_goal",header:"GC Goal",editor:"simplenumberfield"},{xtype:"actioncolumn",width:21,items:[{icon:"images/icons/delete.png",tooltip:"Delete",handler:function(b,d,a){var c=b.getStore().getAt(d);if(confirm("Remove production goal?")){b.getStore().removeAt(d)}}}]},{header:"History",dataIndex:"edit_link",renderer:function(d,c,b){var a=b.getId();return Ext.String.format('<a href="{0}/production_goals/{1}/history">View history</a>',window.basePath,a)},sortable:false}]});Ext.define("Imits.widget.TrackingGoalsGrid",{extend:"Imits.widget.Grid",requires:["Imits.model.TrackingGoal","Imits.widget.grid.RansackFiltersFeature","Imits.Util"],title:"Tracking Goals",iconCls:"icon-grid",columnLines:true,store:{model:"Imits.model.TrackingGoal",autoLoad:true,autoSync:true,remoteSort:true,remoteFilter:true,},selType:"rowmodel",features:[{ftype:"ransack_filters",local:false}],plugins:[Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:false,clicksToEdit:1})],createTrackingGoal:function(){var d=this;var a=d.centreCombo.getSubmitValue();var g=d.yearText.getSubmitValue();var c=d.monthText.getSubmitValue();var b=d.goalText.getSubmitValue();var e=d.typeText.getSubmitValue();if(!a||a&&!a.length){alert("You must enter a valid Consortium.");return}if(!b.length||!e){alert("You must enter correct tracking goal values.");return}d.setLoading(true);var f=Ext.create("Imits.model.TrackingGoal",{production_centre_name:a,year:g,month:c,goal:b,goal_type:e});f.save({callback:function(){d.reloadStore();d.setLoading(false);d.centreCombo.setValue();d.yearText.setValue();d.monthText.setValue();d.goalText.setValue();d.typeText.setValue()}})},initComponent:function(){var a=this;a.callParent();a.addDocked(Ext.create("Ext.toolbar.Paging",{store:a.getStore(),dock:"bottom",displayInfo:true}));a.centreCombo=Ext.create("Imits.widget.SimpleCombo",{id:"centreCombobox",store:window.CENTRE_OPTIONS,fieldLabel:"Production centre",labelAlign:"right",labelWidth:65,storeOptionsAreSpecial:true,hidden:false});a.yearText=Ext.create("Ext.form.field.Number",{fieldLabel:"Year",name:"year",labelWidth:50,labelAlign:"right",regex:/[1-9-]*/});a.monthText=Ext.create("Ext.form.field.Number",{fieldLabel:"Month",name:"month",labelWidth:50,labelAlign:"right",regex:/[1-9-]*/});a.goalText=Ext.create("Ext.form.field.Number",{fieldLabel:"Goal",name:"goal",labelWidth:50,labelAlign:"right",regex:/[1-9-]*/});a.typeText=Ext.create("Imits.widget.SimpleCombo",{fieldLabel:"Goal type",store:window.GOAL_TYPES,storeOptionsAreSpecial:true,name:"goal_type",labelWidth:50,labelAlign:"right",width:250,hidden:false});a.addDocked(Ext.create("Ext.toolbar.Toolbar",{dock:"top",items:[a.centreCombo,a.yearText,a.monthText,a.goalText,a.typeText,"  ",{id:"register_interest_button",text:"Create tracking goal",cls:"x-btn-text-icon",iconCls:"icon-add",grid:a,handler:function(){a.createTrackingGoal()}}]}))},columns:[{dataIndex:"id",header:"ID",readOnly:true,hidden:true},{dataIndex:"production_centre_name",header:"Production centre",editor:{xtype:"simplecombo",store:Ext.Array.merge([""],window.CENTRE_OPTIONS),storeOptionsAreSpecial:true,listConfig:{minWidth:200}},filter:{type:"list",options:window.CENTRE_OPTIONS}},{dataIndex:"year",header:"Year",editor:"simplenumberfield"},{dataIndex:"month",header:"Month",editor:"simplenumberfield"},{dataIndex:"goal",header:"Goal",editor:"simplenumberfield"},{dataIndex:"goal_type",header:"Goal type",editor:{xtype:"simplecombo",store:Ext.Array.merge([""],window.GOAL_TYPES),storeOptionsAreSpecial:true,listConfig:{minWidth:200}},filter:{type:"list",options:window.GOAL_TYPES}},{xtype:"actioncolumn",width:21,items:[{icon:"images/icons/delete.png",tooltip:"Delete",handler:function(b,d,a){var c=b.getStore().getAt(d);if(confirm("Remove tracking goal?")){b.getStore().removeAt(d)}}}]},{header:"History",dataIndex:"edit_link",renderer:function(d,c,b){var a=b.getId();return Ext.String.format('<a href="{0}/tracking_goals/{1}/history">View history</a>',window.basePath,a)},sortable:false}]});Ext.define("Imits.widget.GeneGridGeneral",{extend:"Imits.widget.GeneGridCommon",additionalColumns:[{position:4,data:{header:"Non-Assigned Plans",dataIndex:"non_assigned_mi_plans",readOnly:true,sortable:false,width:250,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="non_assigned_mi_plans">','<a href="'+window.basePath+'/open/mi_plans/{[values["id"]]}">{[this.prettyPrintMiPlan(values)]}</a></br>',"</tpl>",{prettyPrintMiPlan:printMiPlanString})}},{position:5,data:{header:"Assigned Plans",dataIndex:"assigned_mi_plans",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="assigned_mi_plans">','<a href="'+window.basePath+'/open/mi_plans/{[values["id"]]}">{[this.prettyPrintMiPlan(values)]}</a></br>',"</tpl>",{prettyPrintMiPlan:printMiPlanString})}},{position:6,data:{header:"Aborted MIs",dataIndex:"pretty_print_aborted_mi_attempts",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedMIs(pretty_print_aborted_mi_attempts)">','<a href="'+window.basePath+'/open/mi_attempts?q[terms]={parent.marker_symbol}&q[production_centre_name]={production_centre}" target="_blank">[{consortium}:{production_centre}:{count}]</a></br>',"</tpl>",{processedMIs:splitResultString})}},{position:7,data:{header:"MIs in Progress",dataIndex:"pretty_print_mi_attempts_in_progress",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedMIs(pretty_print_mi_attempts_in_progress)">','<a href="'+window.basePath+'/open/mi_attempts?q[terms]={parent.marker_symbol}&q[production_centre_name]={production_centre}" target="_blank">[{consortium}:{production_centre}:{count}]</a></br>',"</tpl>",{processedMIs:splitResultString})}},{position:8,data:{header:"Genotype Confirmed MIs",dataIndex:"pretty_print_mi_attempts_genotype_confirmed",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedMIs(pretty_print_mi_attempts_genotype_confirmed)">','<a href="'+window.basePath+'/open/mi_attempts?q[terms]={parent.marker_symbol}&q[production_centre_name]={production_centre}" target="_blank">[{consortium}:{production_centre}:{count}]</a></br>',"</tpl>",{processedMIs:splitResultString})}},{position:9,data:{header:"Phenotype Attempts",dataIndex:"pretty_print_phenotype_attempts",readOnly:true,sortable:false,width:180,flex:1,xtype:"templatecolumn",tpl:new Ext.XTemplate('<tpl for="this.processedMIs(pretty_print_phenotype_attempts)">','<a href="'+window.basePath+'/open/phenotype_attempts?q[terms]={parent.marker_symbol}&q[production_centre_name]={production_centre}" target="_blank">[{consortium}:{production_centre}:{count}]</a></br>',"</tpl>",{processedMIs:splitResultString})}},{position:1,data:{header:"Production History",dataIndex:"production_history_link",renderer:function(d,b,a){var c=a.getId();return Ext.String.format('<a href="{0}/open/genes/{1}/network_graph">Production Graph</a>',window.basePath,c)},sortable:false}},],initComponent:function(){var a=this;Ext.Array.each(a.additionalColumns,function(b){a.addColumn(b.data,b.position)});a.callParent()}});Ext.define("Imits.widget.MiGridGeneral",{extend:"Imits.widget.MiGridCommon",additionalColumns:{common:[{position:0,data:{header:"Show In Form",dataIndex:"show_link",renderer:function(d,b,a){var c=a.getId();return Ext.String.format('<a href="{0}/open/mi_attempts/{1}">Show in Form</a>',window.basePath,c)},sortable:false}},{position:11,data:{header:"Distribution Centres",dataIndex:"distribution_centres_formatted_display",readOnly:true,sortable:false,width:225,renderer:function(e,b,a){var c=a.getId();var d=a.get("distribution_centres_formatted_display");if(d!=""){return Ext.String.format('<a href="{0}/open/mi_attempts/{1}#distribution_centres" target="_blank">{2}</a>',window.basePath,c,d)}else{return Ext.String.format("{0}",d)}}}},{position:1,data:{header:"Mouse Production Summary",dataIndex:"mouse_production_summary",width:150,renderer:function(c,b,a){var d=a.get("mgi_accession_id");return Ext.String.format('<a href="https://www.mousephenotype.org/data/genes/{0}#allele_tracker_panel_results">View in IMPC Website</a>',d)},sortable:false}}]},constructor:function(a){grid=this;Ext.Object.each(grid.additionalColumns,function(c,b){Ext.Array.each(b,function(d){grid.addColumnsToGroupedColumns(c,d.position,d.data)})});this.callParent([a])},});Ext.define("Imits.widget.MiPlansGridGeneral",{extend:"Imits.widget.MiPlansGridCommon",additionalColumns:[],initComponent:function(){grid=this;Ext.Array.each(grid.additionalColumns,function(a){grid.addColumn(a.data,a.position)});this.callParent()}});Ext.define("Imits.widget.PhenotypeAttemptsGridGeneral",{extend:"Imits.widget.PhenotypeAttemptsGridCommon",additionalColumns:[{position:1,data:{header:"Show In Form",dataIndex:"show_link",renderer:function(d,b,a){var c=a.getId();return Ext.String.format('<a href="{0}/open/phenotype_attempts/{1}">Show in Form</a>',window.basePath,c)},sortable:false}},{position:5,data:{header:"Distribution Centres",dataIndex:"distribution_centres_formatted_display",readOnly:true,sortable:false,width:225,renderer:function(e,b,a){var d=a.getId();var c=a.get("distribution_centres_formatted_display");if(c!=""){return Ext.String.format('<a href="{0}/open/phenotype_attempts/{1}#distribution_centres" target="_blank">{2}</a>',window.basePath,d,c)}else{return Ext.String.format("{0}",c)}}}},{position:2,data:{header:"Phenotyping Summary",dataIndex:"phenotyping_summary",width:125,renderer:function(c,b,a){var d=a.get("mgi_accession_id");if(d!=""){return Ext.String.format('<a href="https://www.mousephenotype.org/data/genes/{0}">View in IMPC Website</a>',d)}else{return Ext.String.format("{0}",Summary)}},sortable:false}}],initComponent:function(){var a=this;Ext.Array.each(a.additionalColumns,function(b){a.addColumn(b.data,b.position)});a.callParent()}});Ext.define("Imits.widget.StrainsGrid",{extend:"Imits.widget.Grid",requires:["Imits.model.Strain","Imits.widget.grid.RansackFiltersFeature","Imits.Util"],title:"Strains",iconCls:"icon-grid",columnLines:true,store:{model:"Imits.model.Strain",autoLoad:true,autoSync:true,remoteSort:true,remoteFilter:true,pageSize:25},selType:"rowmodel",features:[{ftype:"ransack_filters",local:false}],plugins:[Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:false,clicksToEdit:1})],initComponent:function(){var a=this;a.callParent();a.addDocked(Ext.create("Ext.toolbar.Paging",{store:a.getStore(),dock:"bottom",displayInfo:true}))},columns:[{dataIndex:"id",header:"ID",readOnly:true,hidden:true},{dataIndex:"name",header:"ID",width:300,filter:{type:"string"},editor:"textfield"},{dataIndex:"mgi_strain_accession_id",header:"MGI Accession Id",width:300,filter:{type:"string"},editor:"textfield"},{dataIndex:"mgi_strain_name",header:"MGI Strain Name",width:300,filter:{type:"string"},editor:"textfield"},{xtype:"actioncolumn",width:21,items:[{icon:"../images/icons/delete.png",tooltip:"Delete",handler:function(c,d,b){var a=c.getStore().getAt(d);if(confirm("Remove strain?")){c.getStore().removeAt(d)}}}]}]});